{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/contexts/SubtitleSettingsContext.tsx","../src/contexts/VideoInteractingContext.tsx","../src/hotkeys/backward.ts","../src/hotkeys/forward.ts","../src/utils/device.ts","../src/utils/screenfull.ts","../src/hotkeys/fullscreen.ts","../src/hotkeys/playPause.ts","../src/hotkeys/volume.ts","../src/utils/index.ts","../src/utils/hotkey.ts","../src/contexts/VideoPropsContext.tsx","../src/contexts/VideoStateContext.tsx","../src/contexts/GlobalContext.tsx","../src/contexts/VideoContext.tsx","../src/hooks/useDoubleTap.ts","../src/hooks/useGlobalHotKeys.ts","../src/hooks/usePopover.ts","../src/components/Portal.tsx","../src/components/Popover/Popover.tsx","../src/components/Controls/ControlButton/ControlButton.tsx","../src/components/Slider/Slider.tsx","../src/hooks/useTextScaling.ts","../src/hooks/useHotKey.ts","../src/components/Controls/ThumbnailHover.tsx","../src/components/Controls/ProgressSlider/ProgressSlider.tsx","../src/components/Dialog/Dialog.tsx","../src/components/icons/SettingsIcon.tsx","../src/components/icons/ArrowLeftIcon.tsx","../src/components/icons/ArrowRightIcon.tsx","../src/components/TextIcon/TextIcon.tsx","../src/components/icons/CheckIcon.tsx","../src/components/NestedMenu/NestedMenu.tsx","../src/components/icons/AudioIcon.tsx","../src/components/Controls/SettingsButton/AudioMenu.tsx","../src/components/icons/PlaybackSpeedIcon.tsx","../src/components/Controls/SettingsButton/PlaybackSpeedMenu.tsx","../src/components/icons/QualityIcon.tsx","../src/components/Controls/SettingsButton/QualityMenu.tsx","../src/components/icons/SubtitleIcon.tsx","../src/components/Controls/SettingsButton/SubtitleMenu/SubtitleBackgroundOpacity.tsx","../src/components/Controls/SettingsButton/SubtitleMenu/SubtitleFontOpacity.tsx","../src/components/Controls/SettingsButton/SubtitleMenu/SubtitleFontSize.tsx","../src/components/Controls/SettingsButton/SubtitleMenu/SubtitleTextStyle.tsx","../src/components/Controls/SettingsButton/SubtitleMenu/SubtitleSettings.tsx","../src/components/Controls/SettingsButton/SubtitleMenu/SubtitleMenu.tsx","../src/components/Controls/SettingsButton/SettingsButton.tsx","../src/components/icons/VolumeMutedIcon.tsx","../src/components/icons/VolumeOneIcon.tsx","../src/components/icons/VolumeThreeIcon.tsx","../src/components/icons/VolumeTwoIcon.tsx","../src/components/Controls/VolumeButton/VolumeButton.tsx","../src/components/icons/BackwardIcon.tsx","../src/components/Indicator/Indicator.tsx","../src/components/Indicator/BackwardIndicator.tsx","../src/components/Controls/BackwardButton.tsx","../src/components/icons/ForwardIcon.tsx","../src/components/Indicator/ForwardIndicator.tsx","../src/components/Controls/ForwardButton.tsx","../src/components/icons/FullscreenEnterIcon.tsx","../src/components/icons/FullscreenExitIcon.tsx","../src/components/Controls/FullscreenButton.tsx","../src/components/icons/PlayIcon.tsx","../src/components/icons/PauseIcon.tsx","../src/components/icons/LoadingIcon.tsx","../src/components/Indicator/PlayIndicator.tsx","../src/components/Indicator/PauseIndicator.tsx","../src/components/Controls/PlayPauseButton.tsx","../src/components/icons/SubtitleOffIcon.tsx","../src/components/Controls/SubtitleButton.tsx","../src/components/Controls/TimeIndicator.tsx","../src/components/Controls/MobileVolumeSlider/MobileVolumeSlider.tsx","../src/components/icons/CameraIcon.tsx","../src/components/Controls/ScreenshotButton.tsx","../src/components/Indicator/MobileBackwardIndicator/MobileBackwardIndicator.tsx","../src/components/Indicator/MobileForwardIndicator/MobileForwardIndicator.tsx","../src/components/MobileControls/MobileControls.tsx","../src/components/icons/SliderIcon.tsx","../src/components/MobileOverlay/MobileOverlay.tsx","../src/components/Overlay/Overlay.tsx","../src/utils/load-script.ts","../src/components/Player/Player.tsx","../src/components/Subtitle/Subtitle.tsx","../src/components/DefaultUI/DefaultUI.tsx","../src/components/Controls/Controls.tsx","../src/constants.ts","../src/index.tsx","../src/hooks/useClickOutside.ts","../src/hooks/usePrevious.ts"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useCallback, useContext, useEffect } from 'react';\r\n\r\ninterface SubtitleSettings {\r\n  fontSize: number;\r\n  backgroundOpacity: number;\r\n  textStyle: 'none' | 'outline';\r\n  fontOpacity: number;\r\n}\r\n\r\ntype StateSelector = (\r\n  currentState: SubtitleSettings\r\n) => Partial<SubtitleSettings>;\r\n\r\ntype UpdateStateAction = (stateSelector: StateSelector) => void;\r\n\r\ninterface SubtitleSettingsProps {\r\n  state: SubtitleSettings;\r\n  setState: UpdateStateAction;\r\n}\r\n\r\ninterface SubtitleSettingsProviderProps {\r\n  defaultState?: Partial<SubtitleSettings>;\r\n}\r\n\r\nexport const defaultSubtitleSettings: SubtitleSettings = {\r\n  fontSize: 1,\r\n  backgroundOpacity: 0.75,\r\n  fontOpacity: 1,\r\n  textStyle: 'none',\r\n};\r\n\r\nexport const SubtitleSettingsContext =\r\n  React.createContext<SubtitleSettingsProps>({\r\n    state: defaultSubtitleSettings,\r\n    setState: () => {},\r\n  });\r\n\r\nconst LOCALSTORAGE_KEY = 'netplayer_subtitle_settings';\r\n\r\nexport const SubtitleSettingsProvider: React.FC<\r\n  SubtitleSettingsProviderProps\r\n> = ({ defaultState = {}, children }) => {\r\n  const [state, setState] = React.useState<SubtitleSettings>({\r\n    ...defaultSubtitleSettings,\r\n    ...defaultState,\r\n  });\r\n\r\n  const updateState: UpdateStateAction = useCallback(\r\n    (stateSelector) => {\r\n      const newState = stateSelector(state);\r\n\r\n      setState({ ...state, ...newState });\r\n    },\r\n    [state]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const rawSettings = localStorage.getItem(LOCALSTORAGE_KEY);\r\n\r\n    if (!rawSettings) return;\r\n\r\n    const settings = JSON.parse(rawSettings);\r\n\r\n    setState(settings);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  return (\r\n    <SubtitleSettingsContext.Provider value={{ state, setState: updateState }}>\r\n      {children}\r\n    </SubtitleSettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSubtitleSettings = () => {\r\n  return useContext(SubtitleSettingsContext);\r\n};\r\n","import React, { useContext, useState } from 'react';\r\n\r\ninterface ContextValue {\r\n  isInteracting: boolean;\r\n  setIsInteracting: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\ninterface VideoContextProviderProps {\r\n  defaultValue?: boolean;\r\n}\r\n\r\nexport const VideoInteractingContext = React.createContext<ContextValue>({\r\n  isInteracting: false,\r\n  setIsInteracting: () => {},\r\n});\r\n\r\nexport const VideoInteractingContextProvider: React.FC<\r\n  VideoContextProviderProps\r\n> = ({ children, defaultValue = false }) => {\r\n  const [isInteracting, setIsInteracting] = useState(defaultValue);\r\n\r\n  return (\r\n    <VideoInteractingContext.Provider\r\n      value={{ isInteracting, setIsInteracting }}\r\n    >\r\n      {children}\r\n    </VideoInteractingContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useInteract = () => {\r\n  return useContext(VideoInteractingContext);\r\n};\r\n","import { HotKey } from '../types';\r\n\r\nconst backwardHotKey = (hotKey: string | string[] = 'left'): HotKey => ({\r\n  fn: (videoEl: HTMLVideoElement) => {\r\n    videoEl.currentTime = videoEl.currentTime - 10;\r\n  },\r\n  name: 'backward',\r\n  hotKey: hotKey,\r\n});\r\n\r\nexport default backwardHotKey;\r\n","import { HotKey } from '../types';\r\n\r\nconst forwardHotKey = (hotKey: string | string[] = 'right'): HotKey => ({\r\n  fn: (videoEl: HTMLVideoElement) => {\r\n    videoEl.currentTime = videoEl.currentTime + 10;\r\n  },\r\n  name: 'forward',\r\n  hotKey: hotKey,\r\n});\r\n\r\nexport default forwardHotKey;\r\n","/* eslint-disable */\r\n\r\n// @ts-ignore\r\nexport const isMobile: boolean = (function (a, b) {\r\n  if (\r\n    /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\r\n      a\r\n    ) ||\r\n    /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n      a.substr(0, 4)\r\n    )\r\n  )\r\n    return true;\r\n})(\r\n  // @ts-ignore\r\n  navigator.userAgent || navigator.vendor || window.opera\r\n);\r\n\r\nexport const isDesktop = !isMobile;\r\n","// @ts-nocheck\r\n\r\nconst methodMap = [\r\n  [\r\n    'requestFullscreen',\r\n    'exitFullscreen',\r\n    'fullscreenElement',\r\n    'fullscreenEnabled',\r\n    'fullscreenchange',\r\n    'fullscreenerror',\r\n  ],\r\n  // New WebKit\r\n  [\r\n    'webkitRequestFullscreen',\r\n    'webkitExitFullscreen',\r\n    'webkitFullscreenElement',\r\n    'webkitFullscreenEnabled',\r\n    'webkitfullscreenchange',\r\n    'webkitfullscreenerror',\r\n  ],\r\n  // Old WebKit\r\n  [\r\n    'webkitRequestFullScreen',\r\n    'webkitCancelFullScreen',\r\n    'webkitCurrentFullScreenElement',\r\n    'webkitCancelFullScreen',\r\n    'webkitfullscreenchange',\r\n    'webkitfullscreenerror',\r\n  ],\r\n  [\r\n    'mozRequestFullScreen',\r\n    'mozCancelFullScreen',\r\n    'mozFullScreenElement',\r\n    'mozFullScreenEnabled',\r\n    'mozfullscreenchange',\r\n    'mozfullscreenerror',\r\n  ],\r\n  [\r\n    'msRequestFullscreen',\r\n    'msExitFullscreen',\r\n    'msFullscreenElement',\r\n    'msFullscreenEnabled',\r\n    'MSFullscreenChange',\r\n    'MSFullscreenError',\r\n  ],\r\n];\r\n\r\nconst getNativeAPI = () => {\r\n  const unprefixedMethods = methodMap[0];\r\n  const returnValue = {};\r\n\r\n  for (const methodList of methodMap) {\r\n    if (!methodList) continue;\r\n\r\n    const exitFullscreenMethod = methodList[1];\r\n    if (exitFullscreenMethod in document) {\r\n      for (const [index, method] of methodList.entries()) {\r\n        returnValue[unprefixedMethods[index]] = method;\r\n      }\r\n\r\n      return returnValue;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst nativeAPI = getNativeAPI();\r\n\r\nconst eventNameMap = {\r\n  change: nativeAPI.fullscreenchange,\r\n  error: nativeAPI.fullscreenerror,\r\n};\r\n\r\n// eslint-disable-next-line import/no-mutable-exports\r\nlet screenfull = {\r\n  // eslint-disable-next-line default-param-last\r\n  request(element = document.documentElement, options = {}) {\r\n    return new Promise((resolve, reject) => {\r\n      const onFullScreenEntered = () => {\r\n        screenfull.off('change', onFullScreenEntered);\r\n        resolve();\r\n      };\r\n\r\n      screenfull.on('change', onFullScreenEntered);\r\n\r\n      const returnPromise = element[nativeAPI.requestFullscreen](options);\r\n\r\n      if (returnPromise instanceof Promise) {\r\n        returnPromise.then(onFullScreenEntered).catch(reject);\r\n      }\r\n    });\r\n  },\r\n  exit() {\r\n    return new Promise((resolve, reject) => {\r\n      if (!screenfull.isFullscreen) {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      const onFullScreenExit = () => {\r\n        screenfull.off('change', onFullScreenExit);\r\n        resolve();\r\n      };\r\n\r\n      screenfull.on('change', onFullScreenExit);\r\n\r\n      const returnPromise = document[nativeAPI.exitFullscreen]();\r\n\r\n      if (returnPromise instanceof Promise) {\r\n        returnPromise.then(onFullScreenExit).catch(reject);\r\n      }\r\n    });\r\n  },\r\n  toggle(element, options) {\r\n    return screenfull.isFullscreen\r\n      ? screenfull.exit()\r\n      : screenfull.request(element, options);\r\n  },\r\n  onchange(callback) {\r\n    screenfull.on('change', callback);\r\n  },\r\n  onerror(callback) {\r\n    screenfull.on('error', callback);\r\n  },\r\n  on(event, callback) {\r\n    const eventName = eventNameMap[event];\r\n    if (eventName) {\r\n      document.addEventListener(eventName, callback, false);\r\n    }\r\n  },\r\n  off(event, callback) {\r\n    const eventName = eventNameMap[event];\r\n    if (eventName) {\r\n      document.removeEventListener(eventName, callback, false);\r\n    }\r\n  },\r\n  raw: nativeAPI,\r\n  isEnabled: false,\r\n  isFullscreen: false,\r\n  element: null,\r\n};\r\n\r\nObject.defineProperties(screenfull, {\r\n  isFullscreen: {\r\n    get: () => Boolean(document[nativeAPI.fullscreenElement]),\r\n  },\r\n  element: {\r\n    enumerable: true,\r\n    get: () => document[nativeAPI.fullscreenElement],\r\n  },\r\n  isEnabled: {\r\n    enumerable: true,\r\n    // Coerce to boolean in case of old WebKit.\r\n    get: () => Boolean(document[nativeAPI.fullscreenEnabled]),\r\n  },\r\n});\r\n\r\nif (!nativeAPI) {\r\n  screenfull = { isEnabled: false };\r\n}\r\n\r\nexport default screenfull;\r\n","import { PLAYER_CONTAINER_CLASS } from '../constants';\r\nimport { HotKey } from '../types';\r\nimport { isMobile } from '../utils/device';\r\nimport screenfull from '../utils/screenfull';\r\n\r\nconst fullscreenHotKey = (hotKey: string | string[] = 'f'): HotKey => ({\r\n  fn: () => {\r\n    if (!screenfull.isEnabled) return;\r\n\r\n    const containerEl = document.querySelector('.' + PLAYER_CONTAINER_CLASS);\r\n\r\n    if (!containerEl) return;\r\n\r\n    if (!document.fullscreenElement) {\r\n      screenfull.request(containerEl as HTMLElement).then(() => {\r\n        if (!isMobile) return;\r\n\r\n        screen.orientation.lock('landscape');\r\n      });\r\n    } else {\r\n      screenfull.exit().then(() => {\r\n        if (!isMobile) return;\r\n\r\n        screen.orientation.lock('portrait');\r\n      });\r\n    }\r\n  },\r\n  name: 'fullscreen',\r\n  hotKey: hotKey,\r\n});\r\n\r\nexport default fullscreenHotKey;\r\n","import { HotKey } from '../types';\r\n\r\nconst playPauseHotKey = (\r\n  hotKey: string | string[] = ['k', 'space']\r\n): HotKey => ({\r\n  fn: (videoEl: HTMLVideoElement) => {\r\n    if (videoEl.paused) {\r\n      videoEl.play();\r\n    } else {\r\n      videoEl.pause();\r\n    }\r\n  },\r\n  name: 'playPause',\r\n  hotKey: hotKey,\r\n});\r\n\r\nexport default playPauseHotKey;\r\n","import { HotKey } from '../types';\r\n\r\nconst volumeHotKey = (hotKey: string | string[] = 'm'): HotKey => {\r\n  let previousVolume = 1;\r\n\r\n  return {\r\n    fn: (videoEl: HTMLVideoElement) => {\r\n      if (videoEl.volume === 0) {\r\n        videoEl.volume = previousVolume;\r\n      } else {\r\n        previousVolume = videoEl.volume;\r\n        videoEl.volume = 0;\r\n      }\r\n    },\r\n    name: 'volume',\r\n    hotKey: hotKey,\r\n  };\r\n};\r\n\r\nexport default volumeHotKey;\r\n","export const classNames = (...args: (string | boolean)[]) => {\r\n  return args.filter(Boolean).join(' ');\r\n};\r\n\r\nexport function convertTime(seconds: string | number) {\r\n  seconds = seconds.toString();\r\n  let minutes = Math.floor(Number(seconds) / 60).toString();\r\n  let hours = '';\r\n\r\n  if (Number(minutes) > 59) {\r\n    hours = Math.floor(Number(minutes) / 60).toString();\r\n    hours = Number(hours) >= 10 ? hours : `0${hours}`;\r\n    minutes = (Number(minutes) - Number(hours) * 60).toString();\r\n    minutes = Number(minutes) >= 10 ? minutes : `0${minutes}`;\r\n  }\r\n\r\n  seconds = Math.floor(Number(seconds) % 60).toString();\r\n  seconds = Number(seconds) >= 10 ? seconds : '0' + seconds;\r\n\r\n  if (hours) {\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  }\r\n\r\n  return `${minutes}:${seconds}`;\r\n}\r\n\r\n// parse number from string\r\nexport function parseNumberFromString(str: string) {\r\n  return Number(str.replace(/[^0-9]/g, ''));\r\n}\r\n\r\nexport function isObject<T>(item: T) {\r\n  return item && typeof item === 'object' && !Array.isArray(item);\r\n}\r\n\r\n// @ts-ignore\r\nexport function mergeDeep(target, ...sources) {\r\n  if (!sources.length) return target;\r\n  const source = sources.shift();\r\n\r\n  if (isObject(target) && isObject(source)) {\r\n    for (const key in source) {\r\n      if (isObject(source[key])) {\r\n        if (!target[key]) Object.assign(target, { [key]: {} });\r\n        mergeDeep(target[key], source[key]);\r\n      } else {\r\n        Object.assign(target, { [key]: source[key] });\r\n      }\r\n    }\r\n  }\r\n\r\n  return mergeDeep(target, ...sources);\r\n}\r\n\r\n// https://stackoverflow.com/questions/6860853/generate-random-string-for-div-id\r\nexport const randomString = (length: number) => {\r\n  const chars =\r\n    '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghiklmnopqrstuvwxyz'.split('');\r\n\r\n  if (!length) {\r\n    length = Math.floor(Math.random() * chars.length);\r\n  }\r\n\r\n  let str = '';\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    str += chars[Math.floor(Math.random() * chars.length)];\r\n  }\r\n  return str;\r\n};\r\n\r\nexport const stringInterpolate = (str: string, data: Record<string, any>) => {\r\n  Object.entries(data).forEach(([key, value]) => {\r\n    str = str.replace(`{{${key}}}`, value);\r\n  });\r\n\r\n  return str;\r\n};\r\n\r\nexport const isValidUrl = (url: string) => {\r\n  const pattern = new RegExp(\r\n    '^(https?:\\\\/\\\\/)?' + // protocol\r\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n      '(\\\\#[-a-z\\\\d_]*)?$',\r\n    'i'\r\n  ); // fragment locator\r\n\r\n  return !!pattern.test(url);\r\n};\r\n\r\nexport const isInArray = <T>(value: T, array: T[]) => {\r\n  return array.indexOf(value) > -1;\r\n};\r\n\r\nexport const getHeightAndWidthFromDataUrl = (dataURL: string) =>\r\n  new Promise<{ width: number; height: number }>((resolve) => {\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      resolve({\r\n        height: img.height,\r\n        width: img.width,\r\n      });\r\n    };\r\n    img.src = dataURL;\r\n  });\r\n\r\nexport function download(url: string, name: string) {\r\n  const elink = document.createElement('a');\r\n  elink.style.display = 'none';\r\n  elink.href = url;\r\n  elink.download = name;\r\n  document.body.appendChild(elink);\r\n  elink.click();\r\n  document.body.removeChild(elink);\r\n}\r\n","// https://github.com/ianstormtaylor/is-hotkey\r\n\r\nconst IS_MAC =\r\n  typeof window != 'undefined' &&\r\n  /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\r\n\r\nconst MODIFIERS: Record<string, string> = {\r\n  alt: 'altKey',\r\n  control: 'ctrlKey',\r\n  meta: 'metaKey',\r\n  shift: 'shiftKey',\r\n};\r\n\r\nconst ALIASES: Record<string, string> = {\r\n  add: '+',\r\n  break: 'pause',\r\n  cmd: 'meta',\r\n  command: 'meta',\r\n  ctl: 'control',\r\n  ctrl: 'control',\r\n  del: 'delete',\r\n  down: 'arrowdown',\r\n  esc: 'escape',\r\n  ins: 'insert',\r\n  left: 'arrowleft',\r\n  mod: IS_MAC ? 'meta' : 'control',\r\n  opt: 'alt',\r\n  option: 'alt',\r\n  return: 'enter',\r\n  right: 'arrowright',\r\n  space: ' ',\r\n  spacebar: ' ',\r\n  up: 'arrowup',\r\n  win: 'meta',\r\n  windows: 'meta',\r\n};\r\n\r\nconst CODES: Record<string, number> = {\r\n  backspace: 8,\r\n  tab: 9,\r\n  enter: 13,\r\n  shift: 16,\r\n  control: 17,\r\n  alt: 18,\r\n  pause: 19,\r\n  capslock: 20,\r\n  escape: 27,\r\n  ' ': 32,\r\n  pageup: 33,\r\n  pagedown: 34,\r\n  end: 35,\r\n  home: 36,\r\n  arrowleft: 37,\r\n  arrowup: 38,\r\n  arrowright: 39,\r\n  arrowdown: 40,\r\n  insert: 45,\r\n  delete: 46,\r\n  meta: 91,\r\n  numlock: 144,\r\n  scrolllock: 145,\r\n  ';': 186,\r\n  '=': 187,\r\n  ',': 188,\r\n  '-': 189,\r\n  '.': 190,\r\n  '/': 191,\r\n  '`': 192,\r\n  '[': 219,\r\n  '\\\\': 220,\r\n  ']': 221,\r\n  \"'\": 222,\r\n};\r\n\r\nfor (let f = 1; f < 20; f++) {\r\n  CODES['f' + f] = 111 + f;\r\n}\r\n\r\n/**\r\n * Is hotkey?\r\n */\r\n\r\nfunction isHotkey(hotkey: string | string[], event: KeyboardEvent) {\r\n  if (!Array.isArray(hotkey)) {\r\n    hotkey = [hotkey];\r\n  }\r\n\r\n  const array = hotkey.map((string) => parseHotkey(string));\r\n  const check = (e: KeyboardEvent) =>\r\n    array.some((object) => compareHotkey(object, e));\r\n  const ret = event == null ? check : check(event);\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Parse.\r\n */\r\n\r\nfunction parseHotkey(hotkey: string) {\r\n  const ret: Record<string, number | boolean | null> = {};\r\n\r\n  // Special case to handle the `+` key since we use it as a separator.\r\n  hotkey = hotkey.replace('++', '+add');\r\n  const values = hotkey.split('+');\r\n  const { length } = values;\r\n\r\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\r\n  for (const k in MODIFIERS) {\r\n    ret[MODIFIERS[k]] = false;\r\n  }\r\n\r\n  for (let value of values) {\r\n    const optional = value.endsWith('?') && value.length > 1;\r\n\r\n    if (optional) {\r\n      value = value.slice(0, -1);\r\n    }\r\n\r\n    const name = toKeyName(value);\r\n    const modifier = MODIFIERS[name];\r\n\r\n    if (value.length > 1 && !modifier && !ALIASES[value] && !CODES[name]) {\r\n      throw new TypeError(`Unknown modifier: \"${value}\"`);\r\n    }\r\n\r\n    if (length === 1 || !modifier) {\r\n      ret.which = toKeyCode(value);\r\n    }\r\n\r\n    if (modifier) {\r\n      ret[modifier] = optional ? null : true;\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Compare.\r\n */\r\n\r\nfunction compareHotkey(\r\n  object: Record<string, number | boolean | null>,\r\n  event: KeyboardEvent\r\n) {\r\n  for (const key in object) {\r\n    const expected = object[key];\r\n    let actual;\r\n\r\n    if (expected == null) {\r\n      continue;\r\n    }\r\n\r\n    if (key === 'key' && event.key != null) {\r\n      actual = event.key.toLowerCase();\r\n    } else if (key === 'which') {\r\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\r\n    } else {\r\n      // @ts-ignore\r\n      actual = event[key];\r\n    }\r\n\r\n    if (actual == null && expected === false) {\r\n      continue;\r\n    }\r\n\r\n    if (actual !== expected) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Utils.\r\n */\r\n\r\nfunction toKeyCode(name: string) {\r\n  name = toKeyName(name);\r\n  const code = CODES[name] || name.toUpperCase().charCodeAt(0);\r\n  return code;\r\n}\r\n\r\nfunction toKeyName(name: string) {\r\n  name = name.toLowerCase();\r\n  name = ALIASES[name] || name;\r\n  return name;\r\n}\r\n\r\nexport default isHotkey;\r\n","import * as React from 'react';\r\nimport { IndicatorRef } from '../components/Indicator/Indicator';\r\nimport { PlayerProps } from '../components/Player/Player';\r\nimport backwardHotKey from '../hotkeys/backward';\r\nimport forwardHotKey from '../hotkeys/forward';\r\nimport fullscreenHotKey from '../hotkeys/fullscreen';\r\nimport playPauseHotKey from '../hotkeys/playPause';\r\nimport volumeHotKey from '../hotkeys/volume';\r\nimport { HotKey, Shortcuts, Subtitle } from '../types';\r\nimport { mergeDeep } from '../utils';\r\nimport { VideoState } from './VideoStateContext';\r\n\r\ninterface I18nControls extends I18nField {\r\n  play: string;\r\n  pause: string;\r\n  forward: string;\r\n  backward: string;\r\n  enableSubtitle: string;\r\n  disableSubtitle: string;\r\n  settings: string;\r\n  enterFullscreen: string;\r\n  exitFullscreen: string;\r\n  muteVolume: string;\r\n  unmuteVolume: string;\r\n  sliderDragMessage: string;\r\n}\r\n\r\ninterface I18nSettings extends I18nField {\r\n  playbackSpeed: string;\r\n  subtitle: string;\r\n  quality: string;\r\n  subtitleSettings: string;\r\n  reset: string;\r\n  off: string;\r\n  none: string;\r\n  subtitleTextStyle: string;\r\n  subtitleBackgroundOpacity: string;\r\n  subtitleFontOpacity: string;\r\n  subtitleFontSize: string;\r\n  audio: string;\r\n}\r\n\r\ntype I18nField = { [k: string]: string | I18nField };\r\nexport interface I18n extends I18nField {\r\n  controls: I18nControls;\r\n  settings: I18nSettings;\r\n}\r\n\r\nexport type Components = {\r\n  Subtitle: React.FC;\r\n  MobileBackwardIndicator: React.ForwardRefExoticComponent<\r\n    React.RefAttributes<IndicatorRef>\r\n  >;\r\n  MobileForwardIndicator: React.ForwardRefExoticComponent<\r\n    React.RefAttributes<IndicatorRef>\r\n  >;\r\n  Player: React.ForwardRefExoticComponent<\r\n    PlayerProps & React.RefAttributes<HTMLVideoElement>\r\n  >;\r\n  MobileOverlay: React.FC;\r\n  Overlay: React.FC;\r\n  Controls: React.FC;\r\n  MobileControls: React.FC;\r\n};\r\n\r\nexport interface NetPlayerProps extends PlayerProps {\r\n  thumbnail?: string;\r\n  i18n?: I18n;\r\n  shortcuts?: Shortcuts;\r\n  hotkeys?: HotKey[];\r\n  subtitles?: Subtitle[];\r\n  components?: Partial<Components>;\r\n  defaultVideoState?: Pick<\r\n    VideoState,\r\n    'currentAudio' | 'currentQuality' | 'currentSubtitle' | 'isSubtitleDisabled'\r\n  >;\r\n}\r\n\r\nconst defaultI18n: I18n = {\r\n  controls: {\r\n    play: 'Play ({{shortcut}})',\r\n    pause: 'Pause ({{shortcut}})',\r\n    forward: 'Forward {{time}} seconds',\r\n    backward: 'Backward {{time}} seconds',\r\n    enableSubtitle: 'Enable subtitles',\r\n    disableSubtitle: 'Disable subtitles',\r\n    settings: 'Settings',\r\n    enterFullscreen: 'Enter fullscreen ({{shortcut}})',\r\n    exitFullscreen: 'Exit fullscreen ({{shortcut}})',\r\n    muteVolume: 'Mute ({{shortcut}})',\r\n    unmuteVolume: 'Unmute ({{shortcut}})',\r\n    sliderDragMessage: 'Drag to seek video',\r\n    screenshot: 'Screenshot',\r\n  },\r\n  settings: {\r\n    audio: 'Audio',\r\n    playbackSpeed: 'Playback speed',\r\n    quality: 'Quality',\r\n    subtitle: 'Subtitle',\r\n    subtitleSettings: 'Subtitle settings',\r\n    reset: 'Reset',\r\n    none: 'None',\r\n    off: 'Off',\r\n    subtitleBackgroundOpacity: 'Background Opacity',\r\n    subtitleFontOpacity: 'Font Opacity',\r\n    subtitleFontSize: 'Font Size',\r\n    subtitleTextStyle: 'Text Style',\r\n  },\r\n};\r\n\r\nconst defaultHotKeys: HotKey[] = [\r\n  playPauseHotKey(),\r\n  backwardHotKey(),\r\n  forwardHotKey(),\r\n  fullscreenHotKey(),\r\n  volumeHotKey(),\r\n];\r\n\r\nconst mergeHotkeys = (main: HotKey[], target: HotKey[]) => {\r\n  for (const hotkey of target) {\r\n    const index = main.findIndex((h) => h.hotKey === hotkey.hotKey);\r\n\r\n    if (index !== -1) {\r\n      main[index] = hotkey;\r\n    } else {\r\n      main.push(hotkey);\r\n    }\r\n  }\r\n\r\n  return main;\r\n};\r\n\r\nexport const VideoPropsContext =\r\n  // @ts-ignore\r\n  React.createContext<Required<NetPlayerProps>>(null);\r\n\r\nexport const VideoPropsProvider: React.FC<Partial<NetPlayerProps>> = ({\r\n  children,\r\n  ...props\r\n}) => {\r\n  const i18n = React.useMemo(\r\n    () => mergeDeep(defaultI18n, props.i18n),\r\n    [props.i18n]\r\n  );\r\n  const hotkeys = React.useMemo(\r\n    () => mergeHotkeys(defaultHotKeys, props.hotkeys || []),\r\n    [props.hotkeys]\r\n  );\r\n\r\n  return (\r\n    // @ts-ignore\r\n    <VideoPropsContext.Provider value={{ ...props, i18n, hotkeys }}>\r\n      {children}\r\n    </VideoPropsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useVideoProps = () => {\r\n  return React.useContext(VideoPropsContext);\r\n};\r\n\r\nexport default VideoPropsContext;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useCallback, useContext, useEffect, useMemo } from 'react';\r\nimport { Audio, Subtitle } from '../types';\r\nimport { isInArray } from '../utils';\r\nimport { useVideoProps } from './VideoPropsContext';\r\n\r\nexport interface VideoState {\r\n  subtitles: Subtitle[];\r\n  qualities: string[];\r\n  currentQuality: string | null;\r\n  currentSubtitle: string | null;\r\n  isSubtitleDisabled: boolean;\r\n  currentAudio: string | null;\r\n  audios: Audio[];\r\n}\r\n\r\ntype StateSelector = (currentState: VideoState) => Partial<VideoState>;\r\n\r\ntype UpdateStateAction = (stateSelector: StateSelector) => void;\r\n\r\ninterface VideoContextProps {\r\n  state: VideoState;\r\n  setState: UpdateStateAction;\r\n}\r\n\r\ninterface VideoContextProviderProps {\r\n  defaultState?: Partial<VideoState>;\r\n}\r\n\r\nconst defaultVideoState: VideoState = {\r\n  subtitles: [],\r\n  qualities: [],\r\n  audios: [],\r\n  currentQuality: null,\r\n  currentSubtitle: null,\r\n  currentAudio: null,\r\n  isSubtitleDisabled: false,\r\n};\r\n\r\nexport const VideoStateContext = React.createContext<VideoContextProps>({\r\n  state: defaultVideoState,\r\n  setState: () => {},\r\n});\r\n\r\nconst LOCALSTORAGE_KEY = 'netplayer_video_settings';\r\n\r\nexport const VideoStateContextProvider: React.FC<VideoContextProviderProps> = ({\r\n  children,\r\n}) => {\r\n  const props = useVideoProps();\r\n\r\n  const defaultQualities = useMemo(\r\n    () =>\r\n      props.sources\r\n        .filter((source) => source.label)\r\n        .map((source) => source.label!),\r\n    [props.sources]\r\n  );\r\n\r\n  const defaultState = useMemo(\r\n    () => ({\r\n      currentSubtitle: props.subtitles[0]?.lang,\r\n      subtitles: props.subtitles,\r\n      qualities: defaultQualities,\r\n    }),\r\n    [props.subtitles, defaultQualities]\r\n  );\r\n\r\n  const getState = useCallback(() => {\r\n    const rawSettings = localStorage.getItem(LOCALSTORAGE_KEY);\r\n\r\n    const newState = {\r\n      ...defaultVideoState,\r\n      ...defaultState,\r\n      ...props?.defaultVideoState,\r\n    };\r\n\r\n    if (!rawSettings) return newState;\r\n\r\n    const settings: Partial<VideoState> = JSON.parse(rawSettings);\r\n\r\n    const langAudios = newState.audios\r\n      .filter((a) => a?.lang)\r\n      .map((a) => a.lang);\r\n    const langSubtitles = newState.subtitles\r\n      .filter((a) => a?.lang)\r\n      .map((s) => s.lang);\r\n    const langQualities = newState.qualities;\r\n\r\n    const filteredSettings = {\r\n      currentAudio:\r\n        isInArray(settings?.currentAudio, langAudios) || langAudios.length === 0\r\n          ? (settings.currentAudio as string) || null\r\n          : newState.currentAudio,\r\n      currentQuality:\r\n        isInArray(settings?.currentQuality, langQualities) ||\r\n        langQualities.length === 0\r\n          ? (settings.currentQuality as string) || null\r\n          : newState.currentQuality,\r\n      currentSubtitle:\r\n        isInArray(settings?.currentSubtitle, langSubtitles) ||\r\n        langSubtitles.length === 0\r\n          ? (settings.currentSubtitle as string) || null\r\n          : newState.currentSubtitle,\r\n    };\r\n\r\n    return { ...newState, ...filteredSettings };\r\n  }, [defaultState, props?.defaultVideoState]);\r\n\r\n  const [state, setState] = React.useState<VideoState>(getState);\r\n\r\n  useEffect(() => {\r\n    const state = getState();\r\n\r\n    setState(state);\r\n  }, [getState]);\r\n\r\n  useEffect(() => {\r\n    const {\r\n      currentAudio,\r\n      currentQuality,\r\n      currentSubtitle,\r\n      isSubtitleDisabled,\r\n    } = state;\r\n\r\n    localStorage.setItem(\r\n      LOCALSTORAGE_KEY,\r\n      JSON.stringify({\r\n        currentAudio,\r\n        currentQuality,\r\n        currentSubtitle,\r\n        isSubtitleDisabled,\r\n      })\r\n    );\r\n  }, [state]);\r\n\r\n  const updateState: UpdateStateAction = (stateSelector) => {\r\n    setState((prev) => ({ ...prev, ...stateSelector(prev) }));\r\n  };\r\n\r\n  return (\r\n    <VideoStateContext.Provider value={{ state, setState: updateState }}>\r\n      {children}\r\n    </VideoStateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useVideoState = () => {\r\n  return useContext(VideoStateContext);\r\n};\r\n","import React from 'react';\r\nimport { SubtitleSettingsProvider } from './SubtitleSettingsContext';\r\nimport { VideoInteractingContextProvider } from './VideoInteractingContext';\r\nimport { NetPlayerProps, VideoPropsProvider } from './VideoPropsContext';\r\nimport { VideoStateContextProvider } from './VideoStateContext';\r\n\r\nconst GlobalContext: React.FC<NetPlayerProps> = ({\r\n  sources,\r\n  subtitles = [],\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <VideoPropsProvider sources={sources} subtitles={subtitles} {...props}>\r\n      <VideoStateContextProvider>\r\n        <VideoInteractingContextProvider>\r\n          <SubtitleSettingsProvider>{children}</SubtitleSettingsProvider>\r\n        </VideoInteractingContextProvider>\r\n      </VideoStateContextProvider>\r\n    </VideoPropsProvider>\r\n  );\r\n};\r\n\r\nexport default GlobalContext;\r\n","import React, { useCallback, useContext, useEffect } from 'react';\r\nimport Hls from '../types/hls.js';\r\n\r\ninterface VideoState {\r\n  currentTime: number;\r\n  duration: number;\r\n  ended: boolean;\r\n  paused: boolean;\r\n  volume: number;\r\n  buffering: boolean;\r\n  error: string | null;\r\n  seeking: boolean;\r\n}\r\n\r\ninterface VideoContextProps {\r\n  videoEl: HTMLVideoElement | null;\r\n  videoState: VideoState;\r\n  setVideoState: (state: Partial<VideoState>) => void;\r\n}\r\n\r\ninterface VideoContextProviderProps {\r\n  videoRef: React.RefObject<HTMLVideoElement>;\r\n  hlsRef: React.RefObject<Hls>;\r\n}\r\n\r\nconst defaultState: VideoState = {\r\n  currentTime: 0,\r\n  buffering: true,\r\n  duration: 0,\r\n  ended: false,\r\n  paused: true,\r\n  volume: 1,\r\n  seeking: false,\r\n  error: '',\r\n};\r\n\r\nexport const VideoContext = React.createContext<VideoContextProps>({\r\n  videoEl: null,\r\n  videoState: defaultState,\r\n  setVideoState: () => {},\r\n});\r\n\r\nexport const VideoContextProvider: React.FC<VideoContextProviderProps> = ({\r\n  videoRef,\r\n  hlsRef,\r\n  children,\r\n}) => {\r\n  const [videoState, setVideoState] = React.useState<VideoState>(defaultState);\r\n  const [videoEl, setVideoEl] = React.useState<HTMLVideoElement | null>(null);\r\n  const [hls, setHls] = React.useState<Hls | null>(null);\r\n\r\n  const updateState = useCallback((state: Partial<VideoState>) => {\r\n    setVideoState((prev) => ({ ...prev, ...state }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!videoRef?.current) return;\r\n\r\n    setVideoEl(videoRef.current);\r\n  }, [videoRef]);\r\n\r\n  useEffect(() => {\r\n    if (!hlsRef?.current) return;\r\n\r\n    setHls(hlsRef.current);\r\n  }, [hlsRef]);\r\n\r\n  useEffect(() => {\r\n    if (!videoEl) return;\r\n\r\n    const handleError = () => {\r\n      updateState({\r\n        error: videoEl.error?.message || 'Something went wrong with video',\r\n      });\r\n    };\r\n\r\n    const handleWaiting = () => {\r\n      updateState({\r\n        buffering: true,\r\n      });\r\n    };\r\n\r\n    const handleloadeddata = () => {\r\n      updateState({\r\n        currentTime: videoEl.currentTime,\r\n        duration: videoEl.duration,\r\n        buffering: false,\r\n        error: null,\r\n      });\r\n    };\r\n\r\n    const handlePlay = () => {\r\n      updateState({\r\n        paused: false,\r\n        buffering: false,\r\n      });\r\n    };\r\n\r\n    const handlePause = () => {\r\n      updateState({\r\n        paused: true,\r\n      });\r\n    };\r\n\r\n    const handleTimeupdate = () => {\r\n      updateState({\r\n        currentTime: videoEl.currentTime,\r\n        duration: videoEl.duration,\r\n        buffering: false,\r\n        error: null,\r\n        paused: false,\r\n      });\r\n    };\r\n\r\n    const handleEnded = () => {\r\n      updateState({ ended: true, paused: true });\r\n    };\r\n\r\n    const handleVolumeChange = () => {\r\n      updateState({ volume: videoEl.volume });\r\n    };\r\n\r\n    videoEl.addEventListener('waiting', handleWaiting);\r\n    videoEl.addEventListener('loadeddata', handleloadeddata);\r\n    videoEl.addEventListener('play', handlePlay);\r\n    videoEl.addEventListener('playing', handlePlay);\r\n    videoEl.addEventListener('pause', handlePause);\r\n    videoEl.addEventListener('timeupdate', handleTimeupdate);\r\n    videoEl.addEventListener('ended', handleEnded);\r\n    videoEl.addEventListener('volumechange', handleVolumeChange);\r\n    videoEl.addEventListener('error', handleError);\r\n\r\n    return () => {\r\n      videoEl.removeEventListener('waiting', handleWaiting);\r\n      videoEl.removeEventListener('loadeddata', handleloadeddata);\r\n      videoEl.removeEventListener('play', handlePlay);\r\n      videoEl.removeEventListener('playing', handlePlay);\r\n      videoEl.removeEventListener('pause', handlePause);\r\n      videoEl.removeEventListener('timeupdate', handleTimeupdate);\r\n      videoEl.removeEventListener('ended', handleEnded);\r\n      videoEl.removeEventListener('volumechange', handleVolumeChange);\r\n      videoEl.removeEventListener('error', handleError);\r\n    };\r\n  }, [updateState, videoEl]);\r\n\r\n  useEffect(() => {\r\n    if (!hls) return;\r\n\r\n    hls.on(Hls.Events.ERROR, (_, data) => {\r\n      updateState({\r\n        error: data.details,\r\n      });\r\n    });\r\n  }, [hls, updateState]);\r\n\r\n  return (\r\n    <VideoContext.Provider\r\n      value={{ videoEl, videoState, setVideoState: updateState }}\r\n    >\r\n      {children}\r\n    </VideoContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useVideo = () => {\r\n  return useContext(VideoContext);\r\n};\r\n","import { useRef } from 'react';\r\n\r\ntype Event = React.DOMAttributes<HTMLDivElement>['onTouchStart'];\r\n\r\ninterface Props {\r\n  onDoubleTap: Event;\r\n  onTap?: Event;\r\n  tapThreshold?: number;\r\n}\r\n\r\nconst useDoubleTap = ({ onDoubleTap, onTap, tapThreshold = 300 }: Props) => {\r\n  const lastTap = useRef(0);\r\n  const timeout = useRef<NodeJS.Timeout>();\r\n\r\n  const handleTap: Event = (e, ...args) => {\r\n    e.persist();\r\n\r\n    if (timeout.current) {\r\n      clearTimeout(timeout.current);\r\n    }\r\n\r\n    const now = new Date().getTime();\r\n    const timeFromLastTap = now - lastTap.current;\r\n\r\n    if (timeFromLastTap <= tapThreshold && timeFromLastTap > 0) {\r\n      onDoubleTap?.(e, ...args);\r\n    } else {\r\n      timeout.current = setTimeout(() => {\r\n        onTap?.(e, ...args);\r\n      }, tapThreshold);\r\n    }\r\n\r\n    lastTap.current = new Date().getTime();\r\n  };\r\n\r\n  return handleTap;\r\n};\r\n\r\nexport default useDoubleTap;\r\n","import isHotkey from '../utils/hotkey';\r\nimport { useEffect } from 'react';\r\nimport { useVideoProps } from '../contexts/VideoPropsContext';\r\n\r\nconst useGlobalHotKeys = (videoEl: HTMLVideoElement) => {\r\n  const { hotkeys } = useVideoProps();\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      const focusEl = document.activeElement;\r\n\r\n      if (\r\n        focusEl &&\r\n        ((focusEl.tagName.toLowerCase() == 'input' &&\r\n          // @ts-ignore\r\n          focusEl?.type == 'text') ||\r\n          focusEl.tagName.toLowerCase() == 'textarea')\r\n      )\r\n        return;\r\n\r\n      const matchedHotKey = hotkeys.find((hotkey) =>\r\n        isHotkey(hotkey.hotKey, event)\r\n      );\r\n\r\n      if (!matchedHotKey) return;\r\n\r\n      matchedHotKey.fn(videoEl);\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [videoEl, hotkeys]);\r\n};\r\n\r\nexport default useGlobalHotKeys;\r\n","import { useRef, useCallback, useEffect, useState } from 'react';\r\n\r\ntype Position = 'top' | 'bottom' | 'left' | 'right';\r\ntype Strategy = 'absolute' | 'fixed';\r\n\r\nexport interface UsePopoverData {\r\n  x: number;\r\n  y: number;\r\n  strategy: Strategy;\r\n}\r\n\r\nexport interface UsePopoverOptions {\r\n  position: Position;\r\n  offset: number;\r\n  strategy: Strategy;\r\n  overflowElement: HTMLElement | string;\r\n}\r\n\r\nconst defaultOptions: UsePopoverOptions = {\r\n  position: 'top',\r\n  offset: 0,\r\n  strategy: 'absolute',\r\n  overflowElement: document.documentElement,\r\n};\r\n\r\nconst usePopover = <T extends HTMLElement, K extends HTMLElement>(\r\n  options: Partial<UsePopoverOptions> = defaultOptions\r\n) => {\r\n  const { position, offset, strategy, overflowElement } = {\r\n    ...defaultOptions,\r\n    ...options,\r\n  };\r\n\r\n  const [data, setData] = useState<UsePopoverData>({\r\n    x: 0,\r\n    y: 0,\r\n    strategy,\r\n  });\r\n\r\n  const floatingRef = useRef<K>(null);\r\n  const referenceRef = useRef<T>(null);\r\n\r\n  const update = useCallback(() => {\r\n    if (!referenceRef.current || !floatingRef.current) {\r\n      return;\r\n    }\r\n\r\n    let overflowRect: DOMRect;\r\n\r\n    if (typeof overflowElement === 'string') {\r\n      overflowRect = document\r\n        .querySelector(overflowElement)!\r\n        .getBoundingClientRect();\r\n    } else {\r\n      overflowRect = overflowElement.getBoundingClientRect();\r\n    }\r\n\r\n    const referenceRect = referenceRef.current.getBoundingClientRect();\r\n    const floatingRect = floatingRef.current.getBoundingClientRect();\r\n\r\n    const rawX =\r\n      position === 'left'\r\n        ? referenceRect.left - floatingRect.width - offset\r\n        : position === 'right'\r\n        ? referenceRect.right + offset\r\n        : referenceRect.left + referenceRect.width / 2 - floatingRect.width / 2;\r\n\r\n    const rawY =\r\n      position === 'top'\r\n        ? referenceRect.top - floatingRect.height - offset\r\n        : position === 'bottom'\r\n        ? referenceRect.bottom + offset\r\n        : referenceRect.top +\r\n          referenceRect.height / 2 -\r\n          floatingRect.height / 2;\r\n\r\n    let x = rawX;\r\n    const y = rawY;\r\n\r\n    if (x + floatingRect.width > overflowRect.right) {\r\n      x = overflowRect.right - floatingRect.width - offset;\r\n    } else if (x < overflowRect.left) {\r\n      x = overflowRect.left + offset;\r\n    }\r\n\r\n    setData({\r\n      x,\r\n      y,\r\n      strategy,\r\n    });\r\n  }, [offset, overflowElement, position, strategy]);\r\n\r\n  useEffect(() => {\r\n    if (!referenceRef.current || !floatingRef.current) return;\r\n\r\n    const resizeObserver = new ResizeObserver(update);\r\n\r\n    resizeObserver.observe(floatingRef.current);\r\n    resizeObserver.observe(floatingRef.current);\r\n\r\n    document.addEventListener('scroll', update, {\r\n      passive: false,\r\n      capture: true,\r\n    });\r\n    window.addEventListener('resize', update);\r\n\r\n    update();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', update);\r\n      document.removeEventListener('scroll', update, { capture: true });\r\n      resizeObserver.disconnect();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [update, floatingRef.current, referenceRef.current]);\r\n\r\n  return {\r\n    floatingRef,\r\n    referenceRef,\r\n    update,\r\n    ...data,\r\n  };\r\n};\r\n\r\nexport default usePopover;\r\n","import * as React from 'react';\r\n\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface PortalProps {\r\n  element?: Element;\r\n}\r\n\r\nconst Portal: React.FC<PortalProps> = ({\r\n  element = document.body,\r\n  children,\r\n}) => {\r\n  return createPortal(<React.Fragment>{children}</React.Fragment>, element);\r\n};\r\n\r\nexport default Portal;\r\n","import React, { useCallback, useLayoutEffect, useState } from 'react';\r\nimport usePopover, { UsePopoverOptions } from '../../hooks/usePopover';\r\nimport { classNames } from '../../utils';\r\nimport Portal from '../Portal';\r\nimport styles from './Popover.module.css';\r\n\r\nexport interface PopoverProps extends Partial<UsePopoverOptions> {\r\n  reference: React.ReactNode;\r\n  referenceProps?: React.HTMLAttributes<HTMLElement>;\r\n  popperProps?: React.HTMLAttributes<HTMLElement>;\r\n  type?: 'click' | 'hover';\r\n  portalSelector?: string;\r\n}\r\n\r\nconst noop = () => {};\r\n\r\nconst Popover: React.FC<PopoverProps> = ({\r\n  reference,\r\n  children,\r\n  popperProps = {},\r\n  referenceProps = {},\r\n  type = 'click',\r\n  portalSelector,\r\n  ...options\r\n}) => {\r\n  const [portalElement, setPortalElement] = useState<Element>(document.body);\r\n  const { floatingRef, referenceRef, update, strategy, x, y } = usePopover<\r\n    HTMLDivElement,\r\n    HTMLDivElement\r\n  >({ offset: 10, strategy: 'fixed', ...options });\r\n\r\n  const { className: popperClassName = '', ...popperRest } = popperProps!;\r\n  const { className: referenceClassName = '', ...referenceRest } =\r\n    referenceProps!;\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleOpen: React.MouseEventHandler<HTMLDivElement> = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n\r\n      update();\r\n\r\n      setIsOpen(true);\r\n    },\r\n    [update]\r\n  );\r\n\r\n  const handleClose: React.MouseEventHandler<HTMLDivElement> = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      update();\r\n\r\n      setIsOpen(false);\r\n    },\r\n    [update]\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    if (!portalSelector) return;\r\n\r\n    const el = document.querySelector(portalSelector);\r\n\r\n    if (!el) return;\r\n\r\n    setPortalElement(el);\r\n\r\n    update();\r\n  }, [portalSelector, update]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        ref={referenceRef}\r\n        onClick={type === 'click' ? handleOpen : noop}\r\n        onMouseEnter={type === 'hover' ? handleOpen : noop}\r\n        onMouseLeave={type === 'hover' ? handleClose : noop}\r\n        className={classNames(referenceClassName)}\r\n        {...referenceRest}\r\n      >\r\n        {reference}\r\n      </div>\r\n\r\n      <Portal element={portalElement}>\r\n        <div\r\n          style={{\r\n            position: strategy,\r\n            left: x,\r\n            top: y,\r\n          }}\r\n          className={classNames(\r\n            styles.popperContainer,\r\n            isOpen && styles.isOpen,\r\n            popperClassName\r\n          )}\r\n          ref={floatingRef}\r\n          {...popperRest}\r\n        >\r\n          {children}\r\n        </div>\r\n\r\n        {isOpen && type === 'click' && (\r\n          <div\r\n            style={{\r\n              position: 'fixed',\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              zIndex: 40,\r\n            }}\r\n            onClick={handleClose}\r\n          ></div>\r\n        )}\r\n      </Portal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Popover;\r\n","import * as React from 'react';\r\n\r\nimport { PLAYER_CONTAINER_CLASS } from '../../../constants';\r\nimport { classNames } from '../../../utils';\r\nimport { isDesktop } from '../../../utils/device';\r\nimport Popover from '../../Popover';\r\nimport { PopoverProps } from '../../Popover/Popover';\r\nimport styles from './ControlButton.module.css';\r\n\r\ninterface ControlButtonProps extends React.HTMLAttributes<HTMLButtonElement> {\r\n  tooltip?: React.ReactNode;\r\n  tooltipProps?: PopoverProps;\r\n}\r\n\r\nconst selector = `.${PLAYER_CONTAINER_CLASS}`;\r\n\r\nconst ControlButton: React.FC<ControlButtonProps> = ({\r\n  className = '',\r\n  tooltip,\r\n  tooltipProps,\r\n  ...props\r\n}) => {\r\n  const button = (\r\n    <button\r\n      className={classNames('control-button', styles.controlButton, className)}\r\n      {...props}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n\r\n  if (tooltip && isDesktop) {\r\n    return (\r\n      <Popover\r\n        portalSelector={selector}\r\n        reference={button}\r\n        type=\"hover\"\r\n        position=\"top\"\r\n        popperProps={{ className: styles.popper }}\r\n        overflowElement={selector}\r\n        {...tooltipProps}\r\n      >\r\n        <p style={{ backgroundColor: 'black', padding: '0.5rem' }}>{tooltip}</p>\r\n      </Popover>\r\n    );\r\n  }\r\n\r\n  return button;\r\n};\r\n\r\nexport default ControlButton;\r\n","import React, {\r\n  PropsWithChildren,\r\n  useCallback,\r\n  useContext,\r\n  useMemo,\r\n  useRef,\r\n} from 'react';\r\nimport { classNames } from '../../utils';\r\nimport styles from './Slider.module.css';\r\n\r\ninterface SliderOptions {\r\n  vertical?: boolean;\r\n}\r\ninterface SliderProps\r\n  extends Omit<\r\n    React.HTMLAttributes<HTMLDivElement>,\r\n    'onDragStart' | 'onDragEnd'\r\n  > {\r\n  onPercentChange?: (percent: number) => void;\r\n  onPercentIntent?: (percent: number) => void;\r\n  onPercentChanging?: (percent: number) => void;\r\n  onDragStart?: (percent: number) => void;\r\n  onDragEnd?: (percent: number) => void;\r\n  vertical?: boolean;\r\n  width?: number | string;\r\n  height?: number | string;\r\n}\r\n\r\nconst SliderContext = React.createContext<SliderOptions>({ vertical: false });\r\n\r\nconst Slider = ({\r\n  onPercentChange,\r\n  onPercentChanging,\r\n  onMouseDown,\r\n  onMouseUp,\r\n  onMouseLeave,\r\n  onPercentIntent,\r\n  onMouseMove,\r\n  onTouchMove,\r\n  onTouchStart,\r\n  onTouchEnd,\r\n  children,\r\n  className = '',\r\n  onDragStart,\r\n  onDragEnd,\r\n  vertical,\r\n  height,\r\n  width,\r\n  ...props\r\n}: PropsWithChildren<SliderProps & SliderOptions>) => {\r\n  const sliderRef = useRef<HTMLDivElement>(null);\r\n  const isMouseDown = useRef(false);\r\n  const lastTouch = useRef<React.Touch | null>(null);\r\n\r\n  const calculatePercent = useCallback(\r\n    (offset: number) => {\r\n      if (!sliderRef.current) return 0;\r\n\r\n      const { width, left, top, height } =\r\n        sliderRef.current?.getBoundingClientRect()!;\r\n\r\n      const percent = vertical\r\n        ? (height + top - offset) / height\r\n        : (offset - left) / width;\r\n\r\n      const newPercent = percent <= 0 || isNaN(percent) ? 0 : percent * 100;\r\n\r\n      return newPercent > 100 ? 100 : newPercent;\r\n    },\r\n    [vertical]\r\n  );\r\n\r\n  const handleDocumentTouchMove = useCallback((e: TouchEvent) => {\r\n    if (e.cancelable) {\r\n      e.preventDefault();\r\n    }\r\n  }, []);\r\n\r\n  const handleTouchStart: React.TouchEventHandler<HTMLDivElement> = useCallback(\r\n    (e) => {\r\n      document.addEventListener('touchmove', handleDocumentTouchMove, {\r\n        passive: false,\r\n      });\r\n\r\n      isMouseDown.current = true;\r\n      const offset = vertical ? e.touches[0].clientY : e.touches[0].clientX;\r\n      const percent = calculatePercent(offset);\r\n\r\n      onPercentChange?.(percent);\r\n      onDragStart?.(percent);\r\n      onTouchStart?.(e);\r\n    },\r\n    [\r\n      calculatePercent,\r\n      handleDocumentTouchMove,\r\n      onDragStart,\r\n      onPercentChange,\r\n      onTouchStart,\r\n      vertical,\r\n    ]\r\n  );\r\n\r\n  const handleTouchMove: React.TouchEventHandler<HTMLDivElement> = useCallback(\r\n    (e) => {\r\n      lastTouch.current = e.touches[0];\r\n      const offset = vertical ? e.touches[0].clientY : e.touches[0].clientX;\r\n      const percent = calculatePercent(offset);\r\n\r\n      onPercentIntent?.(percent);\r\n      onTouchMove?.(e);\r\n      onPercentChanging?.(percent);\r\n    },\r\n    [\r\n      vertical,\r\n      calculatePercent,\r\n      onPercentIntent,\r\n      onTouchMove,\r\n      onPercentChanging,\r\n    ]\r\n  );\r\n\r\n  const handleTouchEnd: React.TouchEventHandler<HTMLDivElement> = useCallback(\r\n    (e) => {\r\n      document.removeEventListener('touchmove', handleDocumentTouchMove);\r\n\r\n      isMouseDown.current = false;\r\n\r\n      onPercentIntent?.(0);\r\n      onTouchEnd?.(e);\r\n\r\n      if (!lastTouch.current) return;\r\n\r\n      const percent = calculatePercent(\r\n        vertical ? lastTouch.current.clientY : lastTouch.current.clientX\r\n      );\r\n\r\n      onDragEnd?.(percent);\r\n      onPercentChange?.(percent);\r\n    },\r\n    [\r\n      handleDocumentTouchMove,\r\n      onPercentIntent,\r\n      onTouchEnd,\r\n      calculatePercent,\r\n      vertical,\r\n      onDragEnd,\r\n      onPercentChange,\r\n    ]\r\n  );\r\n\r\n  const handleMouseDown: React.MouseEventHandler<HTMLDivElement> = useCallback(\r\n    (e) => {\r\n      isMouseDown.current = true;\r\n      const offset = vertical ? e.clientY : e.clientX;\r\n      const percent = calculatePercent(offset);\r\n\r\n      onDragEnd?.(percent);\r\n      onPercentChange?.(percent);\r\n      onMouseDown?.(e);\r\n    },\r\n    [vertical, calculatePercent, onDragEnd, onPercentChange, onMouseDown]\r\n  );\r\n\r\n  const handleMouseUp: React.MouseEventHandler<HTMLDivElement> = useCallback(\r\n    (e) => {\r\n      isMouseDown.current = false;\r\n      const percent = calculatePercent(vertical ? e.clientY : e.clientX);\r\n\r\n      onDragEnd?.(percent);\r\n      onPercentChange?.(percent);\r\n      onPercentIntent?.(0);\r\n      onMouseUp?.(e);\r\n    },\r\n    [\r\n      calculatePercent,\r\n      vertical,\r\n      onDragEnd,\r\n      onPercentChange,\r\n      onPercentIntent,\r\n      onMouseUp,\r\n    ]\r\n  );\r\n\r\n  const handleMouseMove: React.MouseEventHandler<HTMLDivElement> = useCallback(\r\n    (e) => {\r\n      const percent = calculatePercent(vertical ? e.clientY : e.clientX);\r\n\r\n      onPercentIntent?.(percent);\r\n      onMouseMove?.(e);\r\n\r\n      if (isMouseDown.current) {\r\n        onPercentChanging?.(percent);\r\n      }\r\n    },\r\n    [\r\n      calculatePercent,\r\n      vertical,\r\n      onPercentIntent,\r\n      onMouseMove,\r\n      onPercentChanging,\r\n    ]\r\n  );\r\n\r\n  const handleMouseLeave: React.MouseEventHandler<HTMLDivElement> = useCallback(\r\n    (e) => {\r\n      onMouseLeave?.(e);\r\n\r\n      if (!isMouseDown.current) {\r\n        onPercentIntent?.(0);\r\n\r\n        return;\r\n      }\r\n\r\n      // Handle if user dragging outside of slider\r\n      const handleWindowMouseMove = (e: MouseEvent) => {\r\n        const percent = calculatePercent(vertical ? e.clientY : e.clientX);\r\n\r\n        onPercentIntent?.(percent);\r\n\r\n        if (isMouseDown.current) {\r\n          onPercentChanging?.(percent);\r\n        }\r\n      };\r\n\r\n      const handleWindowMouseUp = (e: MouseEvent) => {\r\n        isMouseDown.current = false;\r\n\r\n        const percent = calculatePercent(vertical ? e.clientY : e.clientX);\r\n\r\n        onDragEnd?.(percent);\r\n        onPercentIntent?.(0);\r\n        onPercentChange?.(percent);\r\n\r\n        window.removeEventListener('mousemove', handleWindowMouseMove);\r\n        window.removeEventListener('mouseup', handleWindowMouseUp);\r\n      };\r\n\r\n      window.addEventListener('mousemove', handleWindowMouseMove);\r\n      window.addEventListener('mouseup', handleWindowMouseUp);\r\n    },\r\n    [\r\n      onMouseLeave,\r\n      onPercentIntent,\r\n      calculatePercent,\r\n      vertical,\r\n      onPercentChanging,\r\n      onDragEnd,\r\n      onPercentChange,\r\n    ]\r\n  );\r\n\r\n  const sliderStyle = useMemo(() => {\r\n    if (width && height) return { width, height };\r\n\r\n    if (vertical) {\r\n      return { height: '100%', width: '5px' };\r\n    }\r\n\r\n    return { width: '100%', height: '5px' };\r\n  }, [width, height, vertical]);\r\n\r\n  return (\r\n    <SliderContext.Provider value={{ vertical }}>\r\n      <div\r\n        onMouseDown={handleMouseDown}\r\n        onMouseUp={handleMouseUp}\r\n        onMouseLeave={handleMouseLeave}\r\n        onMouseMove={handleMouseMove}\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchEnd={handleTouchEnd}\r\n        ref={sliderRef}\r\n        className={classNames(styles.container, className)}\r\n        style={{ ...sliderStyle }}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </div>\r\n    </SliderContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSlider = () => {\r\n  return useContext(SliderContext);\r\n};\r\n\r\ninterface BarProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  percent?: number;\r\n}\r\n\r\ninterface DotProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  percent?: number;\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nconst Bar: React.FC<BarProps> = ({\r\n  percent = 100,\r\n  className = '',\r\n  style,\r\n  ...props\r\n}) => {\r\n  const { vertical } = useSlider();\r\n\r\n  const barStyle = useMemo(() => {\r\n    if (vertical) {\r\n      return {\r\n        height: percent + '%',\r\n        width: '100%',\r\n        bottom: '0px',\r\n      };\r\n    }\r\n\r\n    return {\r\n      width: percent + '%',\r\n      height: '100%',\r\n    };\r\n  }, [percent, vertical]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames(styles.bar, className)}\r\n      style={{ ...barStyle, ...style }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst Dot: React.FC<DotProps> = ({\r\n  percent = 100,\r\n  className = '',\r\n  style,\r\n  width = 13,\r\n  height = 13,\r\n  ...props\r\n}) => {\r\n  const { vertical } = useSlider();\r\n\r\n  const dotStyle = useMemo(() => {\r\n    if (vertical) {\r\n      return {\r\n        bottom: percent + '%',\r\n      };\r\n    }\r\n\r\n    return {\r\n      left: percent + '%',\r\n    };\r\n  }, [percent, vertical]);\r\n\r\n  const dotSize = useMemo(\r\n    () => ({\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n    }),\r\n    [width, height]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={classNames(styles.dot, className)}\r\n      style={{\r\n        ...dotStyle,\r\n        ...dotSize,\r\n        ...style,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nSlider.Bar = Bar;\r\nSlider.Dot = Dot;\r\n\r\nexport default Slider;\r\n","// https://github.com/nirsky/react-native-size-matters/blob/master/lib/scaling-utils.js\r\n\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { PLAYER_CONTAINER_CLASS } from '../constants';\r\n\r\nconst guidelineBaseWidth = 350;\r\nconst guidelineBaseHeight = 680;\r\n\r\nconst getDimension = () => {\r\n  let width = window.screen.width;\r\n  let height = window.screen.height;\r\n\r\n  const containerEl = document.querySelector('.' + PLAYER_CONTAINER_CLASS);\r\n\r\n  if (containerEl) {\r\n    const { width: containerWidth, height: containerHeight } =\r\n      containerEl.getBoundingClientRect();\r\n\r\n    width = containerWidth;\r\n    height = containerHeight;\r\n  }\r\n\r\n  const [shortDimension, longDimension] =\r\n    width < height ? [width, height] : [height, width];\r\n\r\n  return [shortDimension, longDimension];\r\n};\r\n\r\nconst useTextScaling = () => {\r\n  const [[shortDimension, longDimension], setDimension] =\r\n    useState(getDimension);\r\n\r\n  useEffect(() => {\r\n    const containerEl = document.querySelector('.' + PLAYER_CONTAINER_CLASS);\r\n\r\n    const handleResize = () => {\r\n      setDimension(getDimension());\r\n    };\r\n\r\n    if (containerEl) {\r\n      containerEl.addEventListener('resize', handleResize);\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      containerEl?.removeEventListener('resize', handleResize);\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const update = useCallback(() => {\r\n    const [shortDimension, longDimension] = getDimension();\r\n\r\n    setDimension([shortDimension, longDimension]);\r\n  }, []);\r\n\r\n  const scale = useCallback(\r\n    (size: number) => (shortDimension / guidelineBaseWidth) * size,\r\n    [shortDimension]\r\n  );\r\n  const verticalScale = useCallback(\r\n    (size: number) => (longDimension / guidelineBaseHeight) * size,\r\n    [longDimension]\r\n  );\r\n  const moderateScale = useCallback(\r\n    (size: number, factor = 0.5) => size + (scale(size) - size) * factor,\r\n    [scale]\r\n  );\r\n  const moderateVerticalScale = useCallback(\r\n    (size: number, factor = 0.5) =>\r\n      size + (verticalScale(size) - size) * factor,\r\n    [verticalScale]\r\n  );\r\n\r\n  return {\r\n    scale,\r\n    verticalScale,\r\n    moderateScale,\r\n    moderateVerticalScale,\r\n    update,\r\n  };\r\n};\r\n\r\nexport default useTextScaling;\r\n","import { useMemo } from 'react';\r\nimport { useVideoProps } from '../contexts/VideoPropsContext';\r\n\r\nconst useHotKey = (hotKeyName: string) => {\r\n  const { hotkeys } = useVideoProps();\r\n\r\n  const hotkey = useMemo(\r\n    () => hotkeys.find(({ name }) => name === hotKeyName),\r\n    [hotkeys, hotKeyName]\r\n  );\r\n\r\n  return hotkey;\r\n};\r\n\r\nexport const parseHotKey = (\r\n  hotkey: string | string[] | undefined,\r\n  seperator = '/'\r\n) => {\r\n  if (!hotkey) return '';\r\n\r\n  if (Array.isArray(hotkey)) {\r\n    return hotkey.join(seperator);\r\n  }\r\n\r\n  return hotkey;\r\n};\r\n\r\nexport default useHotKey;\r\n","import { parse } from '@plussub/srt-vtt-parser';\r\nimport { Entry } from '@plussub/srt-vtt-parser/dist/src/types';\r\nimport React, { useEffect, useLayoutEffect, useMemo, useState } from 'react';\r\nimport { buildAbsoluteURL } from 'url-toolkit';\r\nimport { PLAYER_CONTAINER_CLASS } from '../../constants';\r\nimport { useVideo, useVideoProps } from '../../contexts';\r\nimport { usePopover } from '../../hooks';\r\nimport { isValidUrl } from '../../utils';\r\nimport Portal from '../Portal';\r\nimport styles from './ProgressSlider/ProgressSlider.module.css';\r\n\r\nconst playerContainerClass = '.' + PLAYER_CONTAINER_CLASS;\r\n\r\ninterface ThumbnailHoverProps {\r\n  hoverPercent: number;\r\n}\r\n\r\nconst ThumbnailHover: React.FC<ThumbnailHoverProps> = ({ hoverPercent }) => {\r\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(\r\n    null\r\n  );\r\n  const [thumbnailEntries, setThumbnailEntries] = useState<Entry[]>([]);\r\n  const { thumbnail } = useVideoProps();\r\n  const { videoEl } = useVideo();\r\n\r\n  const { floatingRef, referenceRef, update, strategy, x, y } = usePopover<\r\n    HTMLDivElement,\r\n    HTMLDivElement\r\n  >({\r\n    offset: 10,\r\n    strategy: 'fixed',\r\n    overflowElement: playerContainerClass,\r\n    position: 'top',\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    const el = document.querySelector(playerContainerClass) as HTMLDivElement;\r\n\r\n    if (!el) return;\r\n\r\n    setPortalElement(el);\r\n\r\n    update();\r\n  }, [update]);\r\n\r\n  useEffect(() => {\r\n    if (!thumbnail) {\r\n      setThumbnailEntries([]);\r\n\r\n      return;\r\n    }\r\n    if (!videoEl) return;\r\n\r\n    const fetchThumbnails = async () => {\r\n      const response = await fetch(thumbnail);\r\n\r\n      const text = await response.text();\r\n\r\n      const { entries = [] } = parse(text);\r\n\r\n      setThumbnailEntries(entries);\r\n    };\r\n\r\n    fetchThumbnails();\r\n  }, [thumbnail, videoEl]);\r\n\r\n  const currentThumbnail = useMemo(() => {\r\n    if (!thumbnail) return undefined;\r\n    if (!thumbnailEntries?.length) return undefined;\r\n    if (!videoEl?.duration) return undefined;\r\n\r\n    const currentTime = (hoverPercent / 100) * videoEl.duration * 1000;\r\n\r\n    const currentEntry = thumbnailEntries.find(\r\n      (entry) => entry.from <= currentTime && entry.to > currentTime\r\n    );\r\n\r\n    if (!currentEntry?.text) return undefined;\r\n\r\n    const thumbnailUrlRaw = isValidUrl(currentEntry.text)\r\n      ? currentEntry.text\r\n      : buildAbsoluteURL(thumbnail, currentEntry.text);\r\n\r\n    const { origin, pathname } = new URL(thumbnailUrlRaw);\r\n\r\n    const thumbnailUrl = origin + pathname;\r\n\r\n    const [x, y, w, h] = thumbnailUrlRaw\r\n      ?.split('=')[1]\r\n      .split(',')\r\n      .map((a) => a.trim());\r\n\r\n    // Update thumbnail position\r\n    update();\r\n\r\n    return {\r\n      rect: {\r\n        x: -1 * Number(x),\r\n        y: -1 * Number(y),\r\n        w: Number(w),\r\n        h: Number(h),\r\n      },\r\n      url: thumbnailUrl,\r\n    };\r\n  }, [hoverPercent, thumbnail, thumbnailEntries, update, videoEl?.duration]);\r\n\r\n  return currentThumbnail && portalElement ? (\r\n    <React.Fragment>\r\n      <div\r\n        ref={referenceRef}\r\n        className={styles.hoverThumbnailReference}\r\n        style={{ left: hoverPercent + '%' }}\r\n      />\r\n\r\n      <Portal element={portalElement}>\r\n        <div\r\n          className={styles.hoverThumbnail}\r\n          ref={floatingRef}\r\n          style={{\r\n            zIndex: '50',\r\n            top: y + 'px',\r\n            left: x + 'px',\r\n            position: strategy,\r\n            display: hoverPercent > 0 ? 'block' : 'none',\r\n            width: currentThumbnail.rect.w,\r\n            height: currentThumbnail.rect.h,\r\n            backgroundImage: `url(${currentThumbnail.url})`,\r\n            backgroundPositionX: currentThumbnail.rect.x,\r\n            backgroundPositionY: currentThumbnail.rect.y,\r\n            backgroundRepeat: 'no-repeat',\r\n          }}\r\n        />\r\n      </Portal>\r\n    </React.Fragment>\r\n  ) : null;\r\n};\r\n\r\nexport default ThumbnailHover;\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { useVideo } from '../../../contexts/VideoContext';\r\nimport { classNames, convertTime } from '../../../utils';\r\nimport { isDesktop } from '../../../utils/device';\r\nimport Slider from '../../Slider';\r\nimport ThumbnailHover from '../ThumbnailHover';\r\nimport styles from './ProgressSlider.module.css';\r\n\r\nconst ProgressSlider = () => {\r\n  const { videoEl, setVideoState } = useVideo();\r\n  const [bufferPercent, setBufferPercent] = useState(0);\r\n  const [hoverPercent, setHoverPercent] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  // https://stackoverflow.com/questions/5029519/html5-video-percentage-loaded\r\n  useEffect(() => {\r\n    if (!videoEl) return;\r\n\r\n    const handleProgressBuffer = () => {\r\n      const buffer = videoEl.buffered;\r\n\r\n      if (!buffer.length) return;\r\n      if (!videoEl.duration) return;\r\n\r\n      const bufferedTime = buffer.end(buffer.length - 1);\r\n      const bufferedPercent = (bufferedTime / videoEl.duration) * 100;\r\n\r\n      setBufferPercent(bufferedPercent);\r\n    };\r\n\r\n    const handleTimeUpdate = () => {\r\n      setCurrentTime(videoEl.currentTime);\r\n    };\r\n\r\n    videoEl.addEventListener('progress', handleProgressBuffer);\r\n    videoEl.addEventListener('timeupdate', handleTimeUpdate);\r\n\r\n    return () => {\r\n      videoEl.removeEventListener('progress', handleProgressBuffer);\r\n      videoEl.removeEventListener('timeupdate', handleTimeUpdate);\r\n    };\r\n  }, [videoEl]);\r\n\r\n  const currentPercent = useMemo(() => {\r\n    if (!videoEl?.duration) return 0;\r\n\r\n    return (currentTime / videoEl.duration) * 100;\r\n  }, [currentTime, videoEl?.duration]);\r\n\r\n  const handlePercentIntent = useCallback((percent: number) => {\r\n    setHoverPercent(percent);\r\n  }, []);\r\n\r\n  const handlePercentChange = useCallback(\r\n    (percent: number) => {\r\n      if (!videoEl?.duration) return;\r\n\r\n      const newTime = (percent / 100) * videoEl.duration;\r\n\r\n      videoEl.currentTime = newTime;\r\n\r\n      if (videoEl.paused) {\r\n        videoEl.play();\r\n      }\r\n\r\n      setVideoState({ seeking: false });\r\n      setCurrentTime(newTime);\r\n    },\r\n    [setVideoState, videoEl]\r\n  );\r\n\r\n  const handleDragStart = useCallback(() => {\r\n    setVideoState({ seeking: true });\r\n  }, [setVideoState]);\r\n\r\n  const handleDragEnd = useCallback(() => {\r\n    setVideoState({ seeking: true });\r\n  }, [setVideoState]);\r\n\r\n  const handlePercentChanging = useCallback(\r\n    (percent) => {\r\n      if (!videoEl?.duration) return;\r\n\r\n      if (!videoEl.paused) {\r\n        videoEl.pause();\r\n      }\r\n\r\n      const newTime = (percent / 100) * videoEl.duration;\r\n\r\n      setVideoState({ seeking: true });\r\n      setCurrentTime(newTime);\r\n    },\r\n    [setVideoState, videoEl]\r\n  );\r\n\r\n  return (\r\n    <Slider\r\n      className={classNames(styles.container, isDesktop && styles.desktop)}\r\n      onPercentIntent={handlePercentIntent}\r\n      onPercentChange={handlePercentChange}\r\n      onPercentChanging={handlePercentChanging}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n    >\r\n      <div className={styles.innerContainer}>\r\n        <Slider.Bar className={styles.hoverBar} percent={hoverPercent} />\r\n        <Slider.Bar className={styles.bufferBar} percent={bufferPercent} />\r\n        <Slider.Bar className={styles.playBar} percent={currentPercent} />\r\n        <Slider.Bar className={styles.backgroundBar} />\r\n        <Slider.Dot className={styles.dot} percent={currentPercent} />\r\n\r\n        <ThumbnailHover hoverPercent={hoverPercent} />\r\n\r\n        {!!hoverPercent && videoEl?.duration && (\r\n          <div\r\n            className={styles.hoverTime}\r\n            style={{ left: hoverPercent + '%' }}\r\n          >\r\n            {convertTime((hoverPercent / 100) * videoEl.duration)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Slider>\r\n  );\r\n};\r\n\r\nexport default ProgressSlider;\r\n","import * as React from 'react';\r\nimport { classNames } from '../../utils';\r\nimport { isMobile } from '../../utils/device';\r\nimport Portal from '../Portal';\r\nimport styles from './Dialog.module.css';\r\n\r\ninterface DialogProps {\r\n  reference: React.ReactNode;\r\n  portalSelector?: string;\r\n}\r\n\r\nconst Dialog: React.FC<DialogProps> = ({\r\n  reference,\r\n  children,\r\n  portalSelector,\r\n}) => {\r\n  const [portalElement, setPortalElement] = React.useState<Element>(\r\n    document.body\r\n  );\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (!portalSelector) return;\r\n\r\n    const el = document.querySelector(portalSelector);\r\n\r\n    if (!el) return;\r\n\r\n    setPortalElement(el);\r\n  }, [portalSelector]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div onClick={() => setShow(true)}>{reference}</div>\r\n\r\n      <Portal element={portalElement}>\r\n        <div className={classNames(styles.dialogContainer)} aria-hidden={!show}>\r\n          <div\r\n            onClick={() => setShow(false)}\r\n            className={styles.dialogOverlay}\r\n          />\r\n\r\n          <div\r\n            className={classNames(\r\n              styles.dialogContent,\r\n              isMobile && styles.dialogContentMobile\r\n            )}\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </Portal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import * as React from 'react';\r\nimport { SVGProps } from 'react';\r\n\r\nconst SettingsIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" {...props}>\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M2 12c0-.865.11-1.703.316-2.504A3 3 0 0 0 4.99 4.867a9.99 9.99 0 0 1 4.335-2.505a3 3 0 0 0 5.348 0a9.99 9.99 0 0 1 4.335 2.505a3 3 0 0 0 2.675 4.63a10.036 10.036 0 0 1 0 5.007a3 3 0 0 0-2.675 4.629a9.99 9.99 0 0 1-4.335 2.505a3 3 0 0 0-5.348 0a9.99 9.99 0 0 1-4.335-2.505a3 3 0 0 0-2.675-4.63A10.056 10.056 0 0 1 2 12zm4.804 3c.63 1.091.81 2.346.564 3.524c.408.29.842.541 1.297.75A4.993 4.993 0 0 1 12 18c1.26 0 2.438.471 3.335 1.274c.455-.209.889-.46 1.297-.75A4.993 4.993 0 0 1 17.196 15a4.993 4.993 0 0 1 2.77-2.25a8.126 8.126 0 0 0 0-1.5A4.993 4.993 0 0 1 17.195 9a4.993 4.993 0 0 1-.564-3.524a7.989 7.989 0 0 0-1.297-.75A4.993 4.993 0 0 1 12 6a4.993 4.993 0 0 1-3.335-1.274a7.99 7.99 0 0 0-1.297.75A4.993 4.993 0 0 1 6.804 9a4.993 4.993 0 0 1-2.77 2.25a8.126 8.126 0 0 0 0 1.5A4.993 4.993 0 0 1 6.805 15zM12 15a3 3 0 1 1 0-6a3 3 0 0 1 0 6zm0-2a1 1 0 1 0 0-2a1 1 0 0 0 0 2z\"\r\n    ></path>\r\n  </svg>\r\n);\r\n\r\nexport default React.memo(SettingsIcon);\r\n","import * as React from 'react';\r\nimport { SVGProps } from 'react';\r\n\r\nconst ArrowLeftIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-hidden=\"true\"\r\n    className=\"iconify iconify--ic\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default React.memo(ArrowLeftIcon);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst ArrowRightIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-hidden=\"true\"\r\n    className=\"iconify iconify--ic\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(ArrowRightIcon);\r\n","import { classNames } from '../../utils';\r\nimport * as React from 'react';\r\nimport styles from './TextIcon.module.css';\r\n\r\nexport interface TextIconProps\r\n  extends Omit<React.HTMLProps<HTMLDivElement>, 'as'> {\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  className?: string;\r\n  as?: string | React.ComponentType<{ className: string }>;\r\n}\r\n\r\nconst TextIcon: React.FC<TextIconProps> = ({\r\n  leftIcon,\r\n  rightIcon,\r\n  as: Component = 'div',\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Component className={classNames(styles.container, className)} {...props}>\r\n      {leftIcon}\r\n      <p>{children}</p>\r\n      {rightIcon}\r\n    </Component>\r\n  );\r\n};\r\n\r\nexport default TextIcon;\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst CheckIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-hidden=\"true\"\r\n    className=\"iconify iconify--mdi\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M21 7 9 19l-5.5-5.5 1.41-1.41L9 16.17 19.59 5.59 21 7Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst Memo = memo(CheckIcon);\r\nexport default Memo;\r\n","import React, {\r\n  createContext,\r\n  PropsWithChildren,\r\n  useCallback,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport { classNames } from '../../utils';\r\nimport ArrowLeftIcon from '../icons/ArrowLeftIcon';\r\nimport ArrowRightIcon from '../icons/ArrowRightIcon';\r\nimport TextIcon from '../TextIcon';\r\nimport styles from './NestedMenu.module.css';\r\nimport CheckIcon from '../icons/CheckIcon';\r\ninterface Menu {\r\n  title: string;\r\n  menuKey: string;\r\n}\r\n\r\ninterface ContextProps {\r\n  activeMenu: Menu;\r\n  push: (menu: Menu) => void;\r\n  pop: () => void;\r\n}\r\n\r\ninterface NestedMenuProps extends React.HTMLProps<HTMLDivElement> {}\r\n\r\nconst defaultHistory: Menu[] = [{ menuKey: 'base', title: 'base' }];\r\n\r\nconst NestedMenuContext = createContext<ContextProps>({\r\n  activeMenu: { menuKey: 'base', title: 'Base' },\r\n  push: () => {},\r\n  pop: () => {},\r\n});\r\n\r\nconst NestedMenu = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}: PropsWithChildren<NestedMenuProps>) => {\r\n  const [history, setHistory] = useState<Menu[]>(defaultHistory);\r\n\r\n  const handleGoBack = useCallback(() => {\r\n    setHistory((prev) => prev.slice(0, -1));\r\n  }, []);\r\n\r\n  const historyPush = useCallback((menu: Menu) => {\r\n    setHistory((prev) => [...prev, menu]);\r\n  }, []);\r\n\r\n  const historyPop = useCallback(() => {\r\n    setHistory((prev) => prev.slice(0, -1));\r\n  }, []);\r\n\r\n  const activeMenu = useMemo(() => history[history.length - 1], [history]);\r\n\r\n  return (\r\n    <NestedMenuContext.Provider\r\n      value={{\r\n        activeMenu,\r\n        push: historyPush,\r\n        pop: historyPop,\r\n      }}\r\n    >\r\n      <div className={classNames(styles.container, className)} {...props}>\r\n        {activeMenu.menuKey !== 'base' && (\r\n          <TextIcon\r\n            onClick={handleGoBack}\r\n            leftIcon={\r\n              <div style={{ width: '1.25rem', height: '1.25rem' }}>\r\n                <ArrowLeftIcon />\r\n              </div>\r\n            }\r\n            className={styles.goBackButton}\r\n          >\r\n            {activeMenu.title}\r\n          </TextIcon>\r\n        )}\r\n\r\n        <ul className={styles.itemContainer}>{children}</ul>\r\n      </div>\r\n    </NestedMenuContext.Provider>\r\n  );\r\n};\r\n\r\nexport interface ItemProps\r\n  extends Omit<React.HTMLProps<HTMLLIElement>, 'onChange'> {\r\n  parentMenuKey?: string;\r\n  itemKey: string;\r\n  title: string;\r\n  activeItemKey?: string;\r\n  value: string;\r\n  onChange?: (value: string) => void;\r\n}\r\n\r\nexport interface BaseItemProps\r\n  extends Omit<React.HTMLAttributes<HTMLLIElement>, 'slot'> {\r\n  title: string;\r\n  isShown?: boolean;\r\n  isActive?: boolean;\r\n  activeIcon?: React.ReactNode;\r\n  slot?: React.ReactNode;\r\n}\r\n\r\nconst BaseItem = React.memo(\r\n  ({\r\n    title,\r\n    isShown,\r\n    isActive,\r\n    className = '',\r\n    activeIcon,\r\n    slot,\r\n    ...props\r\n  }: BaseItemProps) => {\r\n    return isShown ? (\r\n      <li className={classNames(styles.baseItem, className)} {...props}>\r\n        {isActive && activeIcon && (\r\n          <div className={styles.activeIconContainer}>{activeIcon}</div>\r\n        )}\r\n\r\n        <p className={styles.baseItemTitle}>{title}</p>\r\n\r\n        {slot}\r\n      </li>\r\n    ) : null;\r\n  }\r\n);\r\n\r\nBaseItem.displayName = 'BaseItem';\r\n\r\nconst Item = React.memo(\r\n  ({\r\n    title,\r\n    parentMenuKey = 'base',\r\n    itemKey,\r\n    activeItemKey,\r\n    value,\r\n    onChange,\r\n    ...props\r\n  }: ItemProps) => {\r\n    const { activeMenu } = useContext(NestedMenuContext);\r\n\r\n    const isMenuActive = parentMenuKey === activeMenu.menuKey;\r\n    const isItemActive = activeItemKey === itemKey;\r\n\r\n    return (\r\n      <BaseItem\r\n        title={title}\r\n        isShown={isMenuActive}\r\n        isActive={isItemActive}\r\n        onClick={() => {\r\n          onChange?.(value);\r\n        }}\r\n        activeIcon={<CheckIcon />}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nItem.displayName = 'Item';\r\n\r\nexport interface SubMenuProps\r\n  extends Omit<React.HTMLProps<HTMLUListElement>, 'onChange'> {\r\n  menuKey: string;\r\n  title: string;\r\n  activeItemKey?: string;\r\n  parentMenuKey?: string;\r\n  icon?: React.ReactNode;\r\n  onChange?: (value: string) => void;\r\n}\r\n\r\nconst SubMenu: React.FC<SubMenuProps> = ({\r\n  children,\r\n  menuKey,\r\n  title,\r\n  activeItemKey,\r\n  parentMenuKey = 'base',\r\n  className = '',\r\n  icon,\r\n  onChange,\r\n  ...props\r\n}) => {\r\n  const { activeMenu, push } = useContext(NestedMenuContext);\r\n\r\n  const isActive = useMemo(\r\n    () => activeMenu.menuKey === menuKey,\r\n    [activeMenu.menuKey, menuKey]\r\n  );\r\n  const isParentActive = useMemo(\r\n    () => activeMenu.menuKey === parentMenuKey,\r\n    [activeMenu.menuKey, parentMenuKey]\r\n  );\r\n\r\n  const handleSetMenu = useCallback(() => {\r\n    push({\r\n      menuKey,\r\n      title,\r\n    });\r\n  }, [menuKey, push, title]);\r\n\r\n  const resolvedChildren:\r\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\r\n    | React.ReactPortal =\r\n    React.isValidElement(children) && children.type === React.Fragment\r\n      ? children.props.children\r\n      : children;\r\n\r\n  if (React.Children.count(resolvedChildren) === 0) {\r\n    return null;\r\n  }\r\n\r\n  const childrenWithMenuKey = React.Children.map(resolvedChildren, (child) => {\r\n    if (!React.isValidElement(child)) return;\r\n\r\n    const newElement = React.cloneElement(child, {\r\n      ...child.props,\r\n      parentMenuKey: menuKey,\r\n      activeItemKey,\r\n      onChange,\r\n    });\r\n\r\n    return newElement;\r\n  });\r\n\r\n  const itemProps = React.Children.map(resolvedChildren, (child) => {\r\n    if (!React.isValidElement(child)) return;\r\n\r\n    return child.props as ItemProps;\r\n  });\r\n\r\n  const activeItem = itemProps?.find((item) => item?.itemKey === activeItemKey);\r\n\r\n  return isActive ? (\r\n    <ul className={classNames(styles.subMenuContainer, className)} {...props}>\r\n      {childrenWithMenuKey}\r\n    </ul>\r\n  ) : isParentActive ? (\r\n    <BaseItem\r\n      title={title}\r\n      isShown\r\n      isActive\r\n      activeIcon={icon}\r\n      onClick={handleSetMenu}\r\n      slot={\r\n        <div className={styles.subMenuSlotContainer}>\r\n          {activeItem?.title && (\r\n            <p className={styles.subMenuSlotTitle}>{activeItem.title}</p>\r\n          )}\r\n\r\n          <div className={styles.subMenuSlotIcon}>\r\n            <ArrowRightIcon />\r\n          </div>\r\n        </div>\r\n      }\r\n    />\r\n  ) : (\r\n    <React.Fragment>{children}</React.Fragment>\r\n  );\r\n};\r\n\r\nNestedMenu.Item = Item;\r\nNestedMenu.SubMenu = SubMenu;\r\n\r\nexport default NestedMenu;\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst AudioIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-hidden=\"true\"\r\n    className=\"iconify iconify--ic\"\r\n    width=\"1em\"\r\n    height=\"1em\"\r\n    viewBox=\"0 0 24 24\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M12 5v8.55c-.94-.54-2.1-.75-3.33-.32-1.34.48-2.37 1.67-2.61 3.07a4.007 4.007 0 0 0 4.59 4.65c1.96-.31 3.35-2.11 3.35-4.1V7h2c1.1 0 2-.9 2-2s-.9-2-2-2h-2c-1.1 0-2 .9-2 2z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst Memo = memo(AudioIcon);\r\nexport default Memo;\r\n","import React from 'react';\r\nimport { useVideoProps } from '../../../contexts/VideoPropsContext';\r\nimport { useVideoState } from '../../../contexts/VideoStateContext';\r\nimport AudioIcon from '../../icons/AudioIcon';\r\nimport NestedMenu from '../../NestedMenu';\r\n\r\nconst AudioMenu = () => {\r\n  const { state, setState } = useVideoState();\r\n  const { i18n } = useVideoProps();\r\n\r\n  const handleAudioChange = (value: string) => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      currentAudio: value,\r\n    }));\r\n  };\r\n\r\n  return state.audios.length ? (\r\n    <NestedMenu.SubMenu\r\n      menuKey=\"audios\"\r\n      title={i18n.settings.audio}\r\n      activeItemKey={\r\n        !state.currentAudio ? state?.audios?.[0]?.lang : state.currentAudio\r\n      }\r\n      icon={<AudioIcon />}\r\n      onChange={handleAudioChange}\r\n    >\r\n      {state.audios.map((audio) => (\r\n        <NestedMenu.Item\r\n          key={audio.lang}\r\n          itemKey={audio.lang}\r\n          title={audio.language}\r\n          value={audio.lang}\r\n        />\r\n      ))}\r\n    </NestedMenu.SubMenu>\r\n  ) : null;\r\n};\r\n\r\nexport default React.memo(AudioMenu);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst PlaybackSpeedIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"Hawkins-Icon Hawkins-Icon-Standard\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M17.643 7.438c-3.122-3.25-8.164-3.25-11.286 0-3.143 3.273-3.143 8.596 0 11.87l-1.442 1.385c-3.887-4.048-3.887-10.593 0-14.64 3.908-4.07 10.262-4.07 14.17 0 3.887 4.047 3.887 10.592 0 14.64l-1.442-1.386c3.143-3.273 3.143-8.596 0-11.87ZM14 14a2 2 0 1 1-1.482-1.932l3.275-3.275 1.414 1.414-3.275 3.275c.044.165.068.339.068.518Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(PlaybackSpeedIcon);\r\n","import * as React from 'react';\r\n\r\nimport { useVideo } from '../../../contexts/VideoContext';\r\nimport { useVideoProps } from '../../../contexts/VideoPropsContext';\r\nimport PlaybackSpeedIcon from '../../icons/PlaybackSpeedIcon';\r\nimport NestedMenu from '../../NestedMenu';\r\n\r\nconst speeds = [0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\r\n\r\nconst PlaybackSpeedMenu = () => {\r\n  const { videoEl } = useVideo();\r\n  const { i18n } = useVideoProps();\r\n\r\n  const currentSpeed = videoEl?.playbackRate || 1;\r\n\r\n  const handleChangeSpeed = (value: string) => {\r\n    if (!videoEl) return;\r\n\r\n    videoEl.playbackRate = Number(value);\r\n  };\r\n\r\n  return (\r\n    <NestedMenu.SubMenu\r\n      menuKey=\"speed\"\r\n      title={i18n.settings.playbackSpeed}\r\n      activeItemKey={currentSpeed.toString()}\r\n      icon={<PlaybackSpeedIcon />}\r\n      onChange={handleChangeSpeed}\r\n    >\r\n      {speeds.map((speed) => (\r\n        <NestedMenu.Item\r\n          key={speed}\r\n          itemKey={speed.toString()}\r\n          title={`${speed}x`}\r\n          value={speed.toString()}\r\n        />\r\n      ))}\r\n    </NestedMenu.SubMenu>\r\n  );\r\n};\r\n\r\nexport default React.memo(PlaybackSpeedMenu);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst QualityIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-hidden=\"true\"\r\n    className=\"iconify iconify--ic\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M19 4H5a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H5V6h14v12zM7.5 13h2v2H11V9H9.5v2.5h-2V9H6v6h1.5zm6.5 2h.75v1.5h1.5V15H17c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm.5-4.5h2v3h-2v-3z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(QualityIcon);\r\n","import * as React from 'react';\r\nimport { useVideoProps } from '../../../contexts/VideoPropsContext';\r\nimport { useVideoState } from '../../../contexts/VideoStateContext';\r\nimport QualityIcon from '../../icons/QualityIcon';\r\nimport NestedMenu from '../../NestedMenu';\r\n\r\nconst QualityMenu = () => {\r\n  const { state, setState } = useVideoState();\r\n  const { i18n } = useVideoProps();\r\n\r\n  const handleQualityChange = (value: string) => {\r\n    setState(() => ({ currentQuality: value }));\r\n  };\r\n\r\n  return state.qualities.length ? (\r\n    <NestedMenu.SubMenu\r\n      menuKey=\"quality\"\r\n      title={i18n.settings.quality}\r\n      activeItemKey={state.currentQuality || state.qualities[0]}\r\n      icon={<QualityIcon />}\r\n      onChange={handleQualityChange}\r\n    >\r\n      {state.qualities.map((quality, index) => (\r\n        <NestedMenu.Item\r\n          key={quality + index}\r\n          itemKey={quality}\r\n          title={quality}\r\n          value={quality}\r\n        />\r\n      ))}\r\n    </NestedMenu.SubMenu>\r\n  ) : null;\r\n};\r\n\r\nexport default React.memo(QualityMenu);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst SubtitleIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"Hawkins-Icon Hawkins-Icon-Standard\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V6h16v12zM6 10h2v2H6zm0 4h8v2H6zm10 0h2v2h-2zm-6-4h8v2h-8z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(SubtitleIcon);\r\n","import * as React from 'react';\r\n\r\nimport { useSubtitleSettings } from '../../../../contexts/SubtitleSettingsContext';\r\nimport { useVideoProps } from '../../../../contexts/VideoPropsContext';\r\nimport NestedMenu, { SubMenuProps } from '../../../NestedMenu/NestedMenu';\r\n\r\nconst opacities = [0, 25, 50, 75, 100];\r\n\r\nconst SubtitleBackgroundOpacity: React.FC<Partial<SubMenuProps>> = (props) => {\r\n  const { state, setState } = useSubtitleSettings();\r\n  const { i18n } = useVideoProps();\r\n\r\n  return (\r\n    <NestedMenu.SubMenu\r\n      {...props}\r\n      menuKey=\"subtitle_background_opacity\"\r\n      title={i18n.settings.subtitleBackgroundOpacity}\r\n      onChange={(value) => {\r\n        setState(() => ({ backgroundOpacity: Number(value) / 100 }));\r\n      }}\r\n      activeItemKey={(state.backgroundOpacity * 100).toString()}\r\n    >\r\n      {opacities.map((opacity) => (\r\n        <NestedMenu.Item\r\n          itemKey={opacity.toString()}\r\n          title={`${opacity}%`}\r\n          value={opacity.toString()}\r\n          key={opacity}\r\n        ></NestedMenu.Item>\r\n      ))}\r\n    </NestedMenu.SubMenu>\r\n  );\r\n};\r\n\r\nexport default SubtitleBackgroundOpacity;\r\n","import * as React from 'react';\r\n\r\nimport { useSubtitleSettings } from '../../../../contexts/SubtitleSettingsContext';\r\nimport { useVideoProps } from '../../../../contexts/VideoPropsContext';\r\nimport NestedMenu, { SubMenuProps } from '../../../NestedMenu/NestedMenu';\r\n\r\nconst opacities = [0, 25, 50, 75, 100];\r\n\r\nconst SubtitleFontOpacity: React.FC<Partial<SubMenuProps>> = (props) => {\r\n  const { state, setState } = useSubtitleSettings();\r\n  const { i18n } = useVideoProps();\r\n\r\n  return (\r\n    <NestedMenu.SubMenu\r\n      {...props}\r\n      menuKey=\"subtitle_font_opacity\"\r\n      title={i18n.settings.subtitleFontOpacity}\r\n      onChange={(value) => {\r\n        setState(() => ({ fontOpacity: Number(value) / 100 }));\r\n      }}\r\n      activeItemKey={(state.fontOpacity * 100).toString()}\r\n    >\r\n      {opacities.map((opacity) => (\r\n        <NestedMenu.Item\r\n          itemKey={opacity.toString()}\r\n          title={`${opacity}%`}\r\n          value={opacity.toString()}\r\n          key={opacity}\r\n        ></NestedMenu.Item>\r\n      ))}\r\n    </NestedMenu.SubMenu>\r\n  );\r\n};\r\n\r\nexport default SubtitleFontOpacity;\r\n","import * as React from 'react';\r\n\r\nimport { useSubtitleSettings } from '../../../../contexts/SubtitleSettingsContext';\r\nimport { useVideoProps } from '../../../../contexts/VideoPropsContext';\r\nimport NestedMenu, { SubMenuProps } from '../../../NestedMenu/NestedMenu';\r\n\r\nconst fontSizes = [0.5, 0.75, 1, 1.5, 2, 3, 4];\r\n\r\nconst SubtitleFontSize: React.FC<Partial<SubMenuProps>> = (props) => {\r\n  const { state, setState } = useSubtitleSettings();\r\n  const { i18n } = useVideoProps();\r\n\r\n  return (\r\n    <NestedMenu.SubMenu\r\n      {...props}\r\n      menuKey=\"subtitle_font_size\"\r\n      title={i18n.settings.subtitleFontSize}\r\n      onChange={(value) => {\r\n        setState(() => ({ fontSize: Number(value) }));\r\n      }}\r\n      activeItemKey={state.fontSize.toString()}\r\n    >\r\n      {fontSizes.map((size) => (\r\n        <NestedMenu.Item\r\n          itemKey={size.toString()}\r\n          title={`${size * 100}%`}\r\n          value={size.toString()}\r\n          key={size}\r\n        ></NestedMenu.Item>\r\n      ))}\r\n    </NestedMenu.SubMenu>\r\n  );\r\n};\r\n\r\nexport default SubtitleFontSize;\r\n","import * as React from 'react';\r\n\r\nimport { useSubtitleSettings } from '../../../../contexts/SubtitleSettingsContext';\r\nimport { useVideoProps } from '../../../../contexts/VideoPropsContext';\r\nimport NestedMenu, { SubMenuProps } from '../../../NestedMenu/NestedMenu';\r\n\r\nconst SubtitleTextStyle: React.FC<Partial<SubMenuProps>> = (props) => {\r\n  const { state, setState } = useSubtitleSettings();\r\n  const { i18n } = useVideoProps();\r\n\r\n  return (\r\n    <NestedMenu.SubMenu\r\n      {...props}\r\n      menuKey=\"subtitle_text_style\"\r\n      title={i18n.settings.subtitleTextStyle}\r\n      onChange={(value) => {\r\n        // @ts-ignore\r\n        setState(() => ({ textStyle: value }));\r\n      }}\r\n      activeItemKey={state.textStyle}\r\n    >\r\n      <NestedMenu.Item\r\n        itemKey=\"none\"\r\n        title={i18n.settings.none}\r\n        value=\"none\"\r\n      ></NestedMenu.Item>\r\n      <NestedMenu.Item\r\n        itemKey=\"outline\"\r\n        title=\"Outline\"\r\n        value=\"outline\"\r\n      ></NestedMenu.Item>\r\n    </NestedMenu.SubMenu>\r\n  );\r\n};\r\n\r\nexport default SubtitleTextStyle;\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  defaultSubtitleSettings,\r\n  useSubtitleSettings,\r\n} from '../../../../contexts/SubtitleSettingsContext';\r\nimport { useVideoProps } from '../../../../contexts/VideoPropsContext';\r\nimport SettingsIcon from '../../../icons/SettingsIcon';\r\nimport NestedMenu from '../../../NestedMenu';\r\nimport { SubMenuProps } from '../../../NestedMenu/NestedMenu';\r\nimport SubtitleBackgroundOpacity from './SubtitleBackgroundOpacity';\r\nimport SubtitleFontOpacity from './SubtitleFontOpacity';\r\nimport SubtitleFontSize from './SubtitleFontSize';\r\nimport SubtitleTextStyle from './SubtitleTextStyle';\r\n\r\nconst SubtitleSettings: React.FC<Partial<SubMenuProps>> = (props) => {\r\n  const { setState } = useSubtitleSettings();\r\n  const { i18n } = useVideoProps();\r\n\r\n  return (\r\n    <NestedMenu.SubMenu\r\n      {...props}\r\n      menuKey=\"subtitle_settings\"\r\n      title={i18n.settings.subtitleSettings}\r\n      icon={<SettingsIcon />}\r\n      onChange={(val) => {\r\n        if (val !== 'reset') return;\r\n\r\n        setState(() => defaultSubtitleSettings);\r\n      }}\r\n    >\r\n      <SubtitleFontSize />\r\n      <SubtitleBackgroundOpacity />\r\n      <SubtitleTextStyle />\r\n      <SubtitleFontOpacity />\r\n\r\n      <NestedMenu.Item\r\n        itemKey=\"reset\"\r\n        title={i18n.settings.reset}\r\n        value=\"reset\"\r\n      ></NestedMenu.Item>\r\n    </NestedMenu.SubMenu>\r\n  );\r\n};\r\n\r\nexport default React.memo(SubtitleSettings);\r\n","import React from 'react';\r\nimport { useVideoProps } from '../../../../contexts/VideoPropsContext';\r\nimport { useVideoState } from '../../../../contexts/VideoStateContext';\r\nimport SubtitleIcon from '../../../icons/SubtitleIcon';\r\nimport NestedMenu from '../../../NestedMenu';\r\nimport SubtitleSettings from './SubtitleSettings';\r\n\r\nconst SubtitleMenu = () => {\r\n  const { state, setState } = useVideoState();\r\n  const { i18n } = useVideoProps();\r\n\r\n  const handleSubtitleChange = (value: string) => {\r\n    if (value === 'off') {\r\n      setState((prev) => ({\r\n        ...prev,\r\n        isSubtitleDisabled: true,\r\n        currentSubtitle: null,\r\n      }));\r\n\r\n      return;\r\n    }\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      isSubtitleDisabled: false,\r\n      currentSubtitle: value,\r\n    }));\r\n  };\r\n\r\n  return state.subtitles.length ? (\r\n    <NestedMenu.SubMenu\r\n      menuKey=\"subtitles\"\r\n      title={i18n.settings.subtitle}\r\n      activeItemKey={\r\n        state.isSubtitleDisabled\r\n          ? 'off'\r\n          : !state.currentSubtitle\r\n          ? state?.subtitles?.[0]?.lang\r\n          : state.currentSubtitle\r\n      }\r\n      icon={<SubtitleIcon />}\r\n      onChange={handleSubtitleChange}\r\n    >\r\n      <SubtitleSettings />\r\n\r\n      <NestedMenu.Item itemKey=\"off\" title={i18n.settings.off} value=\"off\" />\r\n\r\n      {state.subtitles.map((subtitle) => (\r\n        <NestedMenu.Item\r\n          key={subtitle.lang}\r\n          itemKey={subtitle.lang}\r\n          title={subtitle.language}\r\n          value={subtitle.lang}\r\n        />\r\n      ))}\r\n    </NestedMenu.SubMenu>\r\n  ) : null;\r\n};\r\n\r\nexport default React.memo(SubtitleMenu);\r\n","import * as React from 'react';\r\n\r\nimport { PLAYER_CONTAINER_CLASS } from '../../../constants';\r\nimport { useVideoProps } from '../../../contexts/VideoPropsContext';\r\nimport { isDesktop, isMobile } from '../../../utils/device';\r\nimport Dialog from '../../Dialog';\r\nimport SettingsIcon from '../../icons/SettingsIcon';\r\nimport NestedMenu from '../../NestedMenu';\r\nimport Popover from '../../Popover';\r\nimport ControlButton from '../ControlButton';\r\nimport AudioMenu from './AudioMenu';\r\nimport PlaybackSpeedMenu from './PlaybackSpeedMenu';\r\nimport QualityMenu from './QualityMenu';\r\nimport SubtitleMenu from './SubtitleMenu';\r\n\r\nconst Menu = React.memo(() => (\r\n  <NestedMenu\r\n    style={{\r\n      backgroundColor: 'rgba(0,0,0,0.9)',\r\n      maxHeight: '20rem',\r\n      width: isMobile ? '100%' : '20rem',\r\n      height: 'max-content',\r\n      padding: isMobile ? '1rem' : '0.5rem',\r\n    }}\r\n  >\r\n    <PlaybackSpeedMenu />\r\n    <QualityMenu />\r\n    <SubtitleMenu />\r\n    <AudioMenu />\r\n  </NestedMenu>\r\n));\r\n\r\nMenu.displayName = 'SettingsMenu';\r\n\r\nconst selector = `.${PLAYER_CONTAINER_CLASS}`;\r\n\r\nconst SettingsButton = () => {\r\n  const { i18n } = useVideoProps();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isMobile && (\r\n        <Dialog\r\n          portalSelector={selector}\r\n          reference={\r\n            <ControlButton>\r\n              <SettingsIcon />\r\n            </ControlButton>\r\n          }\r\n        >\r\n          <Menu />\r\n        </Dialog>\r\n      )}\r\n\r\n      {isDesktop && (\r\n        <Popover\r\n          portalSelector={selector}\r\n          reference={\r\n            <ControlButton tooltip={i18n.controls.settings}>\r\n              <SettingsIcon />\r\n            </ControlButton>\r\n          }\r\n          position=\"top\"\r\n          overflowElement={selector}\r\n        >\r\n          <Menu />\r\n        </Popover>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(SettingsButton);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst VolumeMutedIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"Hawkins-Icon Hawkins-Icon-Standard\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M11 4a1 1 0 0 0-1.707-.707L4.586 8H1a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h3.586l4.707 4.707A1 1 0 0 0 11 20V4ZM5.707 9.707 9 6.414v11.172l-3.293-3.293L5.414 14H2v-4h3.414l.293-.293Zm9.586 0L17.586 12l-2.293 2.293 1.414 1.414L19 13.414l2.293 2.293 1.414-1.414L20.414 12l2.293-2.293-1.414-1.414L19 10.586l-2.293-2.293-1.414 1.414Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(VolumeMutedIcon);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst VolumeOneIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"Hawkins-Icon Hawkins-Icon-Standard\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M11 4a1 1 0 0 0-1.707-.707L4.586 8H1a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h3.586l4.707 4.707A1 1 0 0 0 11 20V4ZM5.707 9.707 9 6.414v11.172l-3.293-3.293L5.414 14H2v-4h3.414l.293-.293ZM16 12a6 6 0 0 0-1.757-4.243l-1.415 1.415a4 4 0 0 1 0 5.656l1.415 1.415A6 6 0 0 0 16 12Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(VolumeOneIcon);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst VolumeThreeIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"Hawkins-Icon Hawkins-Icon-Standard\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M24 12a14 14 0 0 0-4.1-9.9l-1.415 1.415a12 12 0 0 1 0 16.97L19.9 21.9A14 14 0 0 0 24 12ZM11 4a1 1 0 0 0-1.707-.707L4.586 8H1a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h3.586l4.707 4.707A1 1 0 0 0 11 20V4ZM5.707 9.707 9 6.414v11.172l-3.293-3.293L5.414 14H2v-4h3.414l.293-.293ZM16 12a6 6 0 0 0-1.757-4.243l-1.415 1.415a4 4 0 0 1 0 5.656l1.415 1.415A6 6 0 0 0 16 12Zm1.07-7.071a10 10 0 0 1 0 14.142l-1.413-1.414a8 8 0 0 0 0-11.314L17.07 4.93Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(VolumeThreeIcon);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst VolumeTwoIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"Hawkins-Icon Hawkins-Icon-Standard\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M11 4a1 1 0 0 0-1.707-.707L4.586 8H1a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h3.586l4.707 4.707A1 1 0 0 0 11 20V4ZM5.707 9.707 9 6.414v11.172l-3.293-3.293L5.414 14H2v-4h3.414l.293-.293ZM17.071 4.93a10 10 0 0 1 0 14.142l-1.414-1.414a8 8 0 0 0 0-11.314L17.07 4.93Zm-2.828 2.828a6 6 0 0 1 0 8.486l-1.415-1.414a4 4 0 0 0 0-5.657l1.415-1.415Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(VolumeTwoIcon);\r\n","import React, { useCallback, useMemo, useRef } from 'react';\r\nimport { useVideo } from '../../../contexts/VideoContext';\r\nimport { useVideoProps } from '../../../contexts/VideoPropsContext';\r\nimport useHotKey, { parseHotKey } from '../../../hooks/useHotKey';\r\nimport { stringInterpolate } from '../../../utils';\r\nimport VolumeMutedIcon from '../../icons/VolumeMutedIcon';\r\nimport VolumeOneIcon from '../../icons/VolumeOneIcon';\r\nimport VolumeThreeIcon from '../../icons/VolumeThreeIcon';\r\nimport VolumeTwoIcon from '../../icons/VolumeTwoIcon';\r\nimport Slider from '../../Slider';\r\nimport ControlButton from '../ControlButton';\r\nimport styles from './VolumeButton.module.css';\r\n\r\nconst VolumeComponents = {\r\n  0: VolumeMutedIcon,\r\n  0.25: VolumeOneIcon,\r\n  0.5: VolumeTwoIcon,\r\n  1: VolumeThreeIcon,\r\n};\r\n\r\nconst VolumeButton = () => {\r\n  const { videoState, videoEl } = useVideo();\r\n  const { i18n } = useVideoProps();\r\n  const hotkey = useHotKey('volume');\r\n  const previousVolume = useRef(videoState.volume);\r\n\r\n  const VolumeComponent = useMemo(() => {\r\n    const entries = Object.entries(VolumeComponents).sort(\r\n      (a, b) => Number(a[0]) - Number(b[0])\r\n    );\r\n\r\n    for (const [key, value] of entries) {\r\n      if (videoState.volume <= Number(key)) {\r\n        return value;\r\n      }\r\n    }\r\n\r\n    return VolumeMutedIcon;\r\n  }, [videoState.volume]);\r\n\r\n  const handleClick = useCallback(() => {\r\n    if (!videoEl) return;\r\n\r\n    if (videoEl.volume === 0) {\r\n      videoEl.volume = previousVolume.current;\r\n    } else {\r\n      previousVolume.current = videoEl.volume;\r\n      videoEl.volume = 0;\r\n    }\r\n  }, [videoEl]);\r\n\r\n  const handleVolumeChange = useCallback(\r\n    (percent: number) => {\r\n      if (!videoEl) return;\r\n\r\n      videoEl.volume = percent / 100;\r\n    },\r\n    [videoEl]\r\n  );\r\n\r\n  return (\r\n    <div className={styles.buttonContainer}>\r\n      <ControlButton\r\n        tooltip={\r\n          videoState.volume === 0\r\n            ? stringInterpolate(i18n.controls.unmuteVolume, {\r\n                shortcut: parseHotKey(hotkey?.hotKey),\r\n              })\r\n            : stringInterpolate(i18n.controls.muteVolume, {\r\n                shortcut: parseHotKey(hotkey?.hotKey),\r\n              })\r\n        }\r\n        onClick={handleClick}\r\n      >\r\n        <VolumeComponent />\r\n      </ControlButton>\r\n\r\n      <Slider\r\n        onPercentChange={handleVolumeChange}\r\n        onPercentChanging={handleVolumeChange}\r\n        className={styles.sliderContainer}\r\n      >\r\n        <Slider.Bar\r\n          className={styles.mainBar}\r\n          percent={videoState.volume * 100}\r\n        />\r\n        <Slider.Bar className={styles.backgroundBar} />\r\n        <Slider.Dot className={styles.dot} percent={videoState.volume * 100} />\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VolumeButton;\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst BackwardIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"Hawkins-Icon Hawkins-Icon-Standard\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M11.02 2.048A10 10 0 1 1 2 12H0a12 12 0 1 0 5-9.747V1H3v4a1 1 0 0 0 1 1h4V4H6a10 10 0 0 1 5.02-1.952ZM2 4v3h3v2H1a1 1 0 0 1-1-1V4h2Zm12.125 12c-.578 0-1.086-.141-1.523-.424-.43-.29-.764-.694-.999-1.215-.235-.527-.353-1.148-.353-1.861 0-.707.118-1.324.353-1.851.236-.527.568-.932.999-1.215.437-.29.945-.434 1.523-.434s1.083.145 1.513.434c.437.283.774.688 1.009 1.215.235.527.353 1.144.353 1.851 0 .713-.118 1.334-.353 1.86-.235.522-.572.927-1.009 1.216-.43.283-.935.424-1.513.424Zm0-1.35c.39 0 .696-.186.918-.56.222-.378.333-.909.333-1.59s-.111-1.208-.333-1.581c-.222-.38-.528-.57-.918-.57s-.696.19-.918.57c-.222.373-.333.9-.333 1.581 0 .681.111 1.212.333 1.59.222.374.528.56.918.56Zm-5.521 1.205v-5.139L7 11.141V9.82l3.198-.8v6.835H8.604Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(BackwardIcon);\r\n","import * as React from 'react';\r\nimport { PLAYER_CONTAINER_CLASS } from '../../constants';\r\nimport { classNames } from '../../utils';\r\nimport { isDesktop } from '../../utils/device';\r\nimport Portal from '../Portal';\r\nimport styles from './Indicator.module.css';\r\n\r\nexport interface IndicatorRef {\r\n  show(): void;\r\n  hide(): void;\r\n}\r\n\r\nexport const createIndicator = <T,>(\r\n  component: React.ForwardRefRenderFunction<IndicatorRef, T>\r\n) => {\r\n  return React.forwardRef<IndicatorRef, T>(component);\r\n};\r\n\r\ninterface BaseIndicatorProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  className?: string;\r\n}\r\n\r\nexport const BaseIndicator = React.forwardRef<IndicatorRef, BaseIndicatorProps>(\r\n  ({ className = '', children = '', ...props }, ref) => {\r\n    const [show, setShow] = React.useState(false);\r\n    const [container, setContainer] = React.useState<Element>();\r\n    const innerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    React.useImperativeHandle(ref, () => ({\r\n      show: () => {\r\n        setShow(false);\r\n\r\n        setTimeout(() => {\r\n          setShow(true);\r\n        }, 0);\r\n      },\r\n      hide: () => setShow(false),\r\n    }));\r\n\r\n    React.useLayoutEffect(() => {\r\n      const containerEl = document.querySelector('.' + PLAYER_CONTAINER_CLASS);\r\n\r\n      if (!containerEl) return;\r\n\r\n      setContainer(containerEl);\r\n    }, []);\r\n\r\n    return (\r\n      <Portal element={container}>\r\n        {show && (\r\n          <div ref={innerRef} className={classNames(className)} {...props}>\r\n            {children}\r\n          </div>\r\n        )}\r\n      </Portal>\r\n    );\r\n  }\r\n);\r\n\r\nconst Indicator = React.forwardRef<IndicatorRef, BaseIndicatorProps>(\r\n  ({ children, className = '', ...props }, ref) => {\r\n    return isDesktop ? (\r\n      <BaseIndicator\r\n        className={classNames(styles.indicator, className)}\r\n        {...props}\r\n        ref={ref}\r\n      >\r\n        {children}\r\n      </BaseIndicator>\r\n    ) : null;\r\n  }\r\n);\r\n\r\nBaseIndicator.displayName = 'BaseIndicator';\r\nIndicator.displayName = 'Indicator';\r\n\r\nexport default Indicator;\r\n","import * as React from 'react';\r\n\r\nimport BackwardIcon from '../icons/BackwardIcon';\r\nimport Indicator, { createIndicator } from './Indicator';\r\n\r\nconst BackwardIndicator = createIndicator((props, ref) => {\r\n  return (\r\n    <Indicator\r\n      style={{\r\n        top: '50%',\r\n        left: '10%',\r\n        transform: 'translate(-10%, -50%)',\r\n      }}\r\n      {...props}\r\n      ref={ref}\r\n    >\r\n      <div style={{ width: '50%', height: '50%' }}>\r\n        <BackwardIcon />\r\n      </div>\r\n    </Indicator>\r\n  );\r\n});\r\n\r\nexport default React.memo(BackwardIndicator);\r\n","import React, { useRef } from 'react';\r\nimport ControlButton from './ControlButton';\r\nimport BackwardIcon from '../icons/BackwardIcon';\r\nimport { useVideo } from '../../contexts/VideoContext';\r\nimport BackwardIndicator from '../Indicator/BackwardIndicator';\r\nimport { IndicatorRef } from '../Indicator/Indicator';\r\nimport { useVideoProps } from '../../contexts/VideoPropsContext';\r\nimport { stringInterpolate } from '../../utils';\r\n\r\nconst BackwardButton = () => {\r\n  const { videoEl } = useVideo();\r\n  const { i18n } = useVideoProps();\r\n  const backwardIndicator = useRef<IndicatorRef>(null);\r\n\r\n  const handleClick = () => {\r\n    if (!videoEl) return;\r\n\r\n    backwardIndicator.current?.show();\r\n    videoEl.currentTime = videoEl.currentTime - 10;\r\n  };\r\n\r\n  return (\r\n    <ControlButton\r\n      tooltip={stringInterpolate(i18n.controls.backward, { time: 10 })}\r\n      onClick={handleClick}\r\n    >\r\n      <BackwardIcon />\r\n\r\n      <BackwardIndicator ref={backwardIndicator} />\r\n    </ControlButton>\r\n  );\r\n};\r\n\r\nexport default BackwardButton;\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst ForwardIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"Hawkins-Icon Hawkins-Icon-Standard\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M6.444 3.685A10 10 0 0 1 18 4h-2v2h4a1 1 0 0 0 1-1V1h-2v1.253A12 12 0 1 0 24 12h-2A10 10 0 1 1 6.444 3.685ZM22 4v3h-3v2h4a1 1 0 0 0 1-1V4h-2Zm-9.398 11.576c.437.283.945.424 1.523.424s1.083-.141 1.513-.424c.437-.29.774-.694 1.009-1.215.235-.527.353-1.148.353-1.861 0-.707-.118-1.324-.353-1.851-.235-.527-.572-.932-1.009-1.215-.43-.29-.935-.434-1.513-.434-.578 0-1.086.145-1.523.434-.43.283-.764.688-.999 1.215-.235.527-.353 1.144-.353 1.851 0 .713.118 1.334.353 1.86.236.522.568.927.999 1.216Zm2.441-1.485c-.222.373-.528.56-.918.56s-.696-.187-.918-.56c-.222-.38-.333-.91-.333-1.591 0-.681.111-1.208.333-1.581.222-.38.528-.57.918-.57s.696.19.918.57c.222.373.333.9.333 1.581 0 .681-.111 1.212-.333 1.59Zm-6.439-3.375v5.14h1.594V9.018L7 9.82v1.321l1.604-.424Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(ForwardIcon);\r\n","import * as React from 'react';\r\n\r\nimport ForwardIcon from '../icons/ForwardIcon';\r\nimport Indicator, { createIndicator } from './Indicator';\r\n\r\nconst ForwardIndicator = createIndicator((props, ref) => {\r\n  return (\r\n    <Indicator\r\n      style={{\r\n        top: '50%',\r\n        left: '90%',\r\n        transform: 'translate(-90%, -50%)',\r\n      }}\r\n      {...props}\r\n      ref={ref}\r\n    >\r\n      <div style={{ width: '50%', height: '50%' }}>\r\n        <ForwardIcon />\r\n      </div>\r\n    </Indicator>\r\n  );\r\n});\r\n\r\nexport default React.memo(ForwardIndicator);\r\n","import * as React from 'react';\r\nimport ControlButton from './ControlButton';\r\nimport ForwardIcon from '../icons/ForwardIcon';\r\nimport { useVideo } from '../../contexts/VideoContext';\r\nimport { IndicatorRef } from '../Indicator/Indicator';\r\nimport ForwardIndicator from '../Indicator/ForwardIndicator';\r\nimport { useVideoProps } from '../../contexts/VideoPropsContext';\r\nimport { stringInterpolate } from '../../utils';\r\n\r\nconst ForwardButton = () => {\r\n  const { videoEl } = useVideo();\r\n  const { i18n } = useVideoProps();\r\n  const forwardIndicator = React.useRef<IndicatorRef>(null);\r\n\r\n  const handleClick = () => {\r\n    if (!videoEl) return;\r\n\r\n    forwardIndicator.current?.show();\r\n    videoEl.currentTime = videoEl.currentTime + 10;\r\n  };\r\n\r\n  return (\r\n    <ControlButton\r\n      tooltip={stringInterpolate(i18n.controls.forward, { time: 10 })}\r\n      onClick={handleClick}\r\n    >\r\n      <ForwardIcon />\r\n\r\n      <ForwardIndicator ref={forwardIndicator} />\r\n    </ControlButton>\r\n  );\r\n};\r\n\r\nexport default React.memo(ForwardButton);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst FullscreenEnterIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    data-uia=\"control-fullscreen-enter\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M0 5a2 2 0 0 1 2-2h7v2H2v4H0V5Zm22 0h-7V3h7a2 2 0 0 1 2 2v4h-2V5ZM2 15v4h7v2H2a2 2 0 0 1-2-2v-4h2Zm20 4v-4h2v4a2 2 0 0 1-2 2h-7v-2h7Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(FullscreenEnterIcon);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst FullscreenExitIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    data-uia=\"control-fullscreen-exit\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M24 8h-5V3h-2v7h7V8ZM0 16h5v5h2v-7H0v2Zm7-6H0V8h5V3h2v7Zm12 11v-5h5v-2h-7v7h2Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(FullscreenExitIcon);\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { PLAYER_CONTAINER_CLASS } from '../../constants';\r\nimport { useVideoProps } from '../../contexts/VideoPropsContext';\r\nimport useHotKey, { parseHotKey } from '../../hooks/useHotKey';\r\nimport { stringInterpolate } from '../../utils';\r\nimport { isMobile } from '../../utils/device';\r\nimport screenfull from '../../utils/screenfull';\r\nimport FullscreenEnterIcon from '../icons/FullscreenEnterIcon';\r\nimport FullscreenExitIcon from '../icons/FullscreenExitIcon';\r\nimport ControlButton from './ControlButton';\r\n\r\nconst FullscreenButton = () => {\r\n  const [isFullscreen, setIsFullscreen] = useState(screenfull.isFullscreen);\r\n  const { i18n } = useVideoProps();\r\n  const hotkey = useHotKey('fullscreen');\r\n\r\n  const handleFullscreen = useCallback(() => {\r\n    if (!screenfull.isEnabled) return;\r\n\r\n    const containerEl = document.querySelector(`.${PLAYER_CONTAINER_CLASS}`);\r\n\r\n    if (!isFullscreen) {\r\n      // @ts-ignore\r\n      screenfull.request(containerEl).then(() => {\r\n        if (!isMobile) return;\r\n\r\n        screen.orientation.lock('landscape');\r\n      });\r\n      setIsFullscreen(true);\r\n    } else {\r\n      screenfull.exit().then(() => {\r\n        if (!isMobile) return;\r\n\r\n        screen.orientation.lock('portrait');\r\n      });\r\n      setIsFullscreen(false);\r\n    }\r\n  }, [isFullscreen]);\r\n\r\n  useEffect(() => {\r\n    const handleFullscreen = () => {\r\n      const isFullscreen = !!document.fullscreenElement;\r\n\r\n      setIsFullscreen(isFullscreen);\r\n\r\n      if (!isMobile) return;\r\n\r\n      if (isFullscreen) {\r\n        screen.orientation.lock('landscape');\r\n      } else {\r\n        screen.orientation.lock('portrait');\r\n      }\r\n    };\r\n\r\n    const containerEl = document.querySelector(`.${PLAYER_CONTAINER_CLASS}`);\r\n\r\n    containerEl?.addEventListener('fullscreenchange', handleFullscreen);\r\n\r\n    return () => {\r\n      containerEl?.removeEventListener('fullscreenchange', handleFullscreen);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ControlButton\r\n      tooltip={\r\n        !isFullscreen\r\n          ? stringInterpolate(i18n.controls.enterFullscreen, {\r\n              shortcut: parseHotKey(hotkey?.hotKey),\r\n            })\r\n          : stringInterpolate(i18n.controls.exitFullscreen, {\r\n              shortcut: parseHotKey(hotkey?.hotKey),\r\n            })\r\n      }\r\n      onClick={handleFullscreen}\r\n    >\r\n      {!isFullscreen ? <FullscreenEnterIcon /> : <FullscreenExitIcon />}\r\n    </ControlButton>\r\n  );\r\n};\r\n\r\nexport default FullscreenButton;\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst PlayIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"svg-icon-nfplayerPlay\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      d=\"M4 2.691a1 1 0 0 1 1.482-.876l16.925 9.309a1 1 0 0 1 0 1.752L5.482 22.185A1 1 0 0 1 4 21.309V2.69Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(PlayIcon);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst PauseIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"svg-icon-nfplayerPause\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M4.5 3a.5.5 0 0 0-.5.5v17a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-17a.5.5 0 0 0-.5-.5h-5Zm10 0a.5.5 0 0 0-.5.5v17a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-17a.5.5 0 0 0-.5-.5h-5Z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(PauseIcon);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst LoadingIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"svg-icon-nfplayerPlay\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M12 2A10 10 0 1 0 22 12A10 10 0 0 0 12 2Zm0 18a8 8 0 1 1 8-8A8 8 0 0 1 12 20Z\"\r\n      opacity=\".5\"\r\n    />\r\n    <path fill=\"currentColor\" d=\"M20 12h2A10 10 0 0 0 12 2V4A8 8 0 0 1 20 12Z\">\r\n      <animateTransform\r\n        attributeName=\"transform\"\r\n        dur=\"1s\"\r\n        from=\"0 12 12\"\r\n        repeatCount=\"indefinite\"\r\n        to=\"360 12 12\"\r\n        type=\"rotate\"\r\n      />\r\n    </path>\r\n  </svg>\r\n);\r\n\r\nexport default memo(LoadingIcon);\r\n","import * as React from 'react';\r\n\r\nimport PlayIcon from '../icons/PlayIcon';\r\nimport Indicator, { createIndicator } from './Indicator';\r\n\r\nconst PlayIndicator = createIndicator((props, ref) => {\r\n  return (\r\n    <Indicator\r\n      style={{\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n      }}\r\n      {...props}\r\n      ref={ref}\r\n    >\r\n      <div style={{ width: '50%', height: '50%' }}>\r\n        <PlayIcon />\r\n      </div>\r\n    </Indicator>\r\n  );\r\n});\r\n\r\nexport default React.memo(PlayIndicator);\r\n","import * as React from 'react';\r\n\r\nimport PauseIcon from '../icons/PauseIcon';\r\nimport Indicator, { createIndicator } from './Indicator';\r\n\r\nconst PauseIndicator = createIndicator((props, ref) => {\r\n  return (\r\n    <Indicator\r\n      style={{\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n      }}\r\n      {...props}\r\n      ref={ref}\r\n    >\r\n      <div style={{ width: '50%', height: '50%' }}>\r\n        <PauseIcon />\r\n      </div>\r\n    </Indicator>\r\n  );\r\n});\r\n\r\nexport default React.memo(PauseIndicator);\r\n","import * as React from 'react';\r\nimport ControlButton from './ControlButton';\r\nimport PlayIcon from '../icons/PlayIcon';\r\nimport PauseIcon from '../icons/PauseIcon';\r\nimport { useVideo } from '../../contexts/VideoContext';\r\nimport LoadingIcon from '../icons/LoadingIcon';\r\nimport PlayIndicator from '../Indicator/PlayIndicator';\r\nimport PauseIndicator from '../Indicator/PauseIndicator';\r\nimport { IndicatorRef } from '../Indicator/Indicator';\r\nimport { stringInterpolate } from '../../utils';\r\nimport { useVideoProps } from '../../contexts/VideoPropsContext';\r\nimport useHotKey, { parseHotKey } from '../../hooks/useHotKey';\r\n\r\nconst PlayPauseButton = () => {\r\n  const playIndicator = React.useRef<IndicatorRef>(null);\r\n  const pauseIndicator = React.useRef<IndicatorRef>(null);\r\n\r\n  const hotkey = useHotKey('playPause');\r\n  const { i18n } = useVideoProps();\r\n  const { videoState, videoEl } = useVideo();\r\n\r\n  const handleClick = () => {\r\n    if (!videoEl) return;\r\n\r\n    if (videoState.paused) {\r\n      playIndicator.current?.show();\r\n      videoEl.play();\r\n    } else {\r\n      pauseIndicator.current?.show();\r\n      videoEl.pause();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ControlButton\r\n      tooltip={\r\n        videoState.paused\r\n          ? stringInterpolate(i18n.controls.play, {\r\n              shortcut: parseHotKey(hotkey?.hotKey),\r\n            })\r\n          : stringInterpolate(i18n.controls.pause, {\r\n              shortcut: parseHotKey(hotkey?.hotKey),\r\n            })\r\n      }\r\n      onClick={handleClick}\r\n    >\r\n      {videoState.buffering ? (\r\n        <LoadingIcon />\r\n      ) : videoState.paused ? (\r\n        <PlayIcon />\r\n      ) : (\r\n        <PauseIcon />\r\n      )}\r\n\r\n      <PlayIndicator ref={playIndicator} />\r\n      <PauseIndicator ref={pauseIndicator} />\r\n    </ControlButton>\r\n  );\r\n};\r\n\r\nexport default React.memo(PlayPauseButton);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst SubtitleOffIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"Hawkins-Icon Hawkins-Icon-Standard\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M20 4H6.83l2 2H20v11.17l1.76 1.76c.15-.28.24-.59.24-.93V6c0-1.1-.9-2-2-2z\"\r\n    />\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M18 10h-5.17l2 2H18zM1.04 3.87l1.2 1.2C2.09 5.35 2 5.66 2 6v12c0 1.1.9 2 2 2h13.17l2.96 2.96 1.41-1.41L2.45 2.45 1.04 3.87zM4 6.83 7.17 10H6v2h2v-1.17L11.17 14H6v2h7.17l2 2H4V6.83z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(SubtitleOffIcon);\r\n","import * as React from 'react';\r\nimport { useVideoProps } from '../../contexts/VideoPropsContext';\r\nimport { useVideoState } from '../../contexts/VideoStateContext';\r\nimport SubtitleIcon from '../icons/SubtitleIcon';\r\nimport SubtitleOffIcon from '../icons/SubtitleOffIcon';\r\nimport ControlButton from './ControlButton';\r\n\r\nconst SubtitleButton = () => {\r\n  const { state, setState } = useVideoState();\r\n  const { i18n } = useVideoProps();\r\n\r\n  const toggle = React.useCallback(() => {\r\n    setState((prev) => ({\r\n      isSubtitleDisabled: !prev.isSubtitleDisabled,\r\n    }));\r\n  }, [setState]);\r\n\r\n  return state?.subtitles?.length ? (\r\n    <ControlButton\r\n      tooltip={\r\n        state.isSubtitleDisabled\r\n          ? i18n.controls.enableSubtitle\r\n          : i18n.controls.disableSubtitle\r\n      }\r\n      onClick={toggle}\r\n    >\r\n      {state.isSubtitleDisabled ? <SubtitleOffIcon /> : <SubtitleIcon />}\r\n    </ControlButton>\r\n  ) : null;\r\n};\r\n\r\nexport default React.memo(SubtitleButton);\r\n","import * as React from 'react';\r\n\r\nimport { useVideo } from '../../contexts/VideoContext';\r\nimport { convertTime } from '../../utils';\r\n\r\nconst TimeIndicator = () => {\r\n  const { videoState } = useVideo();\r\n\r\n  return (\r\n    <p>\r\n      {convertTime(videoState.currentTime)} /{' '}\r\n      {convertTime(videoState.duration || 0)}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default React.memo(TimeIndicator);\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport { useInteract, useVideo } from '../../../contexts';\r\nimport VolumeMutedIcon from '../../icons/VolumeMutedIcon';\r\nimport VolumeOneIcon from '../../icons/VolumeOneIcon';\r\nimport VolumeThreeIcon from '../../icons/VolumeThreeIcon';\r\nimport VolumeTwoIcon from '../../icons/VolumeTwoIcon';\r\nimport Slider from '../../Slider';\r\nimport styles from './MobileVolumeSlider.module.css';\r\n\r\nconst VolumeComponents = {\r\n  0: VolumeMutedIcon,\r\n  0.25: VolumeOneIcon,\r\n  0.5: VolumeTwoIcon,\r\n  1: VolumeThreeIcon,\r\n};\r\n\r\nconst MobileVolumeSlider = () => {\r\n  const { videoState, videoEl } = useVideo();\r\n  const { setIsInteracting } = useInteract();\r\n\r\n  const handleVolumeChange = useCallback(\r\n    (percent: number) => {\r\n      setIsInteracting(true);\r\n\r\n      if (!videoEl) return;\r\n\r\n      videoEl.volume = percent / 100;\r\n    },\r\n    [setIsInteracting, videoEl]\r\n  );\r\n\r\n  const VolumeComponent = useMemo(() => {\r\n    const entries = Object.entries(VolumeComponents).sort(\r\n      (a, b) => Number(a[0]) - Number(b[0])\r\n    );\r\n\r\n    for (const [key, value] of entries) {\r\n      if (videoState.volume <= Number(key)) {\r\n        return value;\r\n      }\r\n    }\r\n\r\n    return VolumeMutedIcon;\r\n  }, [videoState.volume]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.volumeIcon}>\r\n        <VolumeComponent />\r\n      </div>\r\n\r\n      <Slider\r\n        height=\"33%\"\r\n        width=\"5px\"\r\n        vertical\r\n        className={styles.sliderContainer}\r\n        onPercentChange={handleVolumeChange}\r\n        onPercentChanging={handleVolumeChange}\r\n      >\r\n        <Slider.Bar\r\n          className={styles.mainBar}\r\n          percent={videoState.volume * 100}\r\n        />\r\n        <Slider.Bar className={styles.backgroundBar} />\r\n        <Slider.Dot className={styles.dot} percent={videoState.volume * 100} />\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(MobileVolumeSlider);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst CameraIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    width={32}\r\n    height={32}\r\n    viewBox=\"0 0 24 24\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M12 18q2.075 0 3.538-1.462Q17 15.075 17 13q0-2.075-1.462-3.538Q14.075 8 12 8 9.925 8 8.463 9.462 7 10.925 7 13q0 2.075 1.463 3.538Q9.925 18 12 18Zm0-2q-1.25 0-2.125-.875T9 13q0-1.25.875-2.125T12 10q1.25 0 2.125.875T15 13q0 1.25-.875 2.125T12 16Zm6-6q.425 0 .712-.288Q19 9.425 19 9t-.288-.713Q18.425 8 18 8t-.712.287Q17 8.575 17 9t.288.712Q17.575 10 18 10ZM4 21q-.825 0-1.412-.587Q2 19.825 2 19V7q0-.825.588-1.412Q3.175 5 4 5h3.15L8.7 3.325q.15-.15.337-.238Q9.225 3 9.425 3h5.15q.2 0 .388.087.187.088.337.238L16.85 5H20q.825 0 1.413.588Q22 6.175 22 7v12q0 .825-.587 1.413Q20.825 21 20 21Zm16-2V7h-4.05l-1.825-2h-4.25L8.05 7H4v12Zm-8-6Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst Memo = memo(CameraIcon);\r\nexport default Memo;\r\n","import React from 'react';\r\nimport { useVideo, useVideoProps } from '../../contexts';\r\nimport { download, randomString } from '../../utils';\r\nimport CameraIcon from '../icons/CameraIcon';\r\nimport ControlButton from './ControlButton';\r\n\r\nconst ScreenshotButton = () => {\r\n  const { videoEl } = useVideo();\r\n  const { i18n } = useVideoProps();\r\n\r\n  const snapshot = function () {\r\n    if (!videoEl) return;\r\n\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    canvas.width = videoEl.videoWidth;\r\n    canvas.height = videoEl.videoHeight;\r\n\r\n    ctx.drawImage(videoEl, 0, 0);\r\n    const fileName = randomString(10) + '.png';\r\n    const imageUrl = canvas.toDataURL('image/png');\r\n\r\n    download(imageUrl, fileName);\r\n  };\r\n\r\n  return (\r\n    <ControlButton tooltip={i18n.controls.screenshot} onClick={snapshot}>\r\n      <CameraIcon />\r\n    </ControlButton>\r\n  );\r\n};\r\n\r\nexport default ScreenshotButton;\r\n","import * as React from 'react';\r\nimport BackwardIcon from '../../icons/BackwardIcon';\r\nimport { BaseIndicator, createIndicator } from '../Indicator';\r\nimport styles from './MobileBackwardIndicator.module.css';\r\n\r\nconst MobileBackwardIndicator = createIndicator((props, ref) => {\r\n  return (\r\n    <BaseIndicator {...props} className={styles.indicator} ref={ref}>\r\n      <div className={styles.iconContainer}>\r\n        <BackwardIcon />\r\n      </div>\r\n    </BaseIndicator>\r\n  );\r\n});\r\n\r\nexport default MobileBackwardIndicator;\r\n","import * as React from 'react';\r\nimport ForwardIcon from '../../icons/ForwardIcon';\r\nimport { BaseIndicator, createIndicator } from '../Indicator';\r\nimport styles from './MobileForwardIndicator.module.css';\r\n\r\nconst MobileForwardIndicator = createIndicator((props, ref) => {\r\n  return (\r\n    <BaseIndicator {...props} className={styles.indicator} ref={ref}>\r\n      <div className={styles.iconContainer}>\r\n        <ForwardIcon />\r\n      </div>\r\n    </BaseIndicator>\r\n  );\r\n});\r\n\r\nexport default MobileForwardIndicator;\r\n","import * as React from 'react';\r\nimport { useVideo } from '../../contexts/VideoContext';\r\nimport { useInteract } from '../../contexts/VideoInteractingContext';\r\nimport { classNames } from '../../utils';\r\nimport FullscreenButton from '../Controls/FullscreenButton';\r\nimport ProgressSlider from '../Controls/ProgressSlider';\r\nimport TimeIndicator from '../Controls/TimeIndicator';\r\nimport styles from './MobileControls.module.css';\r\n\r\nconst MobileControls = () => {\r\n  const { isInteracting } = useInteract();\r\n  const { videoState } = useVideo();\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        styles.container,\r\n        !videoState.seeking &&\r\n          !isInteracting &&\r\n          !videoState.buffering &&\r\n          styles.inactive\r\n      )}\r\n    >\r\n      <div className={styles.controlsContainer}>\r\n        <TimeIndicator />\r\n\r\n        <div className={styles.fullscreenButton}>\r\n          <FullscreenButton />\r\n        </div>\r\n      </div>\r\n      <div className={styles.sliderContainer}>\r\n        <ProgressSlider />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(MobileControls);\r\n","import * as React from 'react';\r\nimport { SVGProps, memo } from 'react';\r\n\r\nconst SliderIcon = (props: SVGProps<SVGSVGElement>) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-hidden=\"true\"\r\n    className=\"iconify iconify--uil\"\r\n    width={32}\r\n    height={32}\r\n    viewBox=\"0 0 24 24\"\r\n    style={{ width: '100%', height: '100%' }}\r\n    {...props}\r\n  >\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M21 11h-3.184a2.982 2.982 0 0 0-5.632 0H3a1 1 0 0 0 0 2h9.184a2.982 2.982 0 0 0 5.632 0H21a1 1 0 0 0 0-2Zm-6 2a1 1 0 1 1 1-1 1.001 1.001 0 0 1-1 1Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default memo(SliderIcon);\r\n","import * as React from 'react';\r\nimport { useVideo } from '../../contexts/VideoContext';\r\nimport { useInteract } from '../../contexts/VideoInteractingContext';\r\nimport { useVideoProps } from '../../contexts/VideoPropsContext';\r\nimport { classNames } from '../../utils';\r\nimport BackwardButton from '../Controls/BackwardButton';\r\nimport ForwardButton from '../Controls/ForwardButton';\r\nimport MobileVolumeSlider from '../Controls/MobileVolumeSlider';\r\nimport PlayPauseButton from '../Controls/PlayPauseButton';\r\nimport ScreenshotButton from '../Controls/ScreenshotButton';\r\nimport SettingsButton from '../Controls/SettingsButton';\r\nimport SliderIcon from '../icons/SliderIcon';\r\nimport TextIcon from '../TextIcon';\r\nimport styles from './MobileOverlay.module.css';\r\n\r\nconst MobileOverlay = () => {\r\n  const { isInteracting } = useInteract();\r\n  const { i18n } = useVideoProps();\r\n  const { videoState } = useVideo();\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        'mobile-overlay',\r\n        styles.overlayContainer,\r\n        !isInteracting &&\r\n          !videoState.seeking &&\r\n          !videoState.buffering &&\r\n          styles.inactive\r\n      )}\r\n    >\r\n      <TextIcon\r\n        leftIcon={\r\n          <div className={styles.dragMessageIcon}>\r\n            <SliderIcon />\r\n          </div>\r\n        }\r\n        className={classNames(\r\n          styles.dragMessage,\r\n          !videoState.seeking && styles.inactive\r\n        )}\r\n      >\r\n        {i18n.controls.sliderDragMessage}\r\n      </TextIcon>\r\n\r\n      <MobileVolumeSlider />\r\n\r\n      <div\r\n        className={classNames(\r\n          styles.uiContainer,\r\n          videoState.seeking && styles.inactive\r\n        )}\r\n      >\r\n        <div className={styles.playerControlsContainer}>\r\n          <div className={styles.playerControlsInnerContainer}>\r\n            <div className={styles.backwardButton}>\r\n              <BackwardButton />\r\n            </div>\r\n\r\n            <div className={styles.playButton}>\r\n              <PlayPauseButton />\r\n            </div>\r\n\r\n            <div className={styles.forwardButton}>\r\n              <ForwardButton />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.mobileTopButtons}>\r\n          <ScreenshotButton />\r\n          <SettingsButton />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(MobileOverlay);\r\n","import * as React from 'react';\r\nimport { useVideo } from '../../contexts/VideoContext';\r\nimport styles from './Overlay.module.css';\r\n\r\nconst Overlay = () => {\r\n  const { videoEl } = useVideo();\r\n\r\n  const handleToggleVideo = () => {\r\n    if (!videoEl) return;\r\n\r\n    if (videoEl.paused) {\r\n      videoEl.play();\r\n    } else {\r\n      videoEl.pause();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div onClick={handleToggleVideo} className={styles.overlayContainer}></div>\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n","import load from 'load-script';\r\n\r\ntype AllowedAttributes = 'type' | 'charset' | 'async' | 'text';\r\n\r\ntype Options = Partial<Pick<HTMLScriptElement, AllowedAttributes>> & {\r\n  attrs?: Record<string, string>;\r\n};\r\n\r\nconst loadedScripts: Record<string, HTMLScriptElement> = {};\r\n\r\nconst getDefinedScript = (variableName: string) => {\r\n  // @ts-ignore\r\n  if (window[variableName]) {\r\n    // @ts-ignore\r\n    return window[variableName];\r\n  }\r\n\r\n  if (window.exports && window.exports[variableName]) {\r\n    return window.exports[variableName];\r\n  }\r\n\r\n  if (\r\n    window.module &&\r\n    window.module.exports &&\r\n    window.module.exports[variableName]\r\n  ) {\r\n    return window.module.exports[variableName];\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nfunction loadScript<T>(\r\n  src: HTMLScriptElement['src'],\r\n  variableName: string,\r\n  options: Options = {}\r\n): Promise<T> {\r\n  return new Promise((resolve, reject) => {\r\n    if (loadedScripts[variableName]) {\r\n      resolve(getDefinedScript(variableName));\r\n\r\n      return;\r\n    }\r\n\r\n    load(src, options, (err, script) => {\r\n      if (err) return reject(err);\r\n\r\n      loadedScripts[variableName] = script;\r\n\r\n      resolve(getDefinedScript(variableName));\r\n    });\r\n  });\r\n}\r\n\r\nexport default loadScript;\r\n","import * as React from 'react';\r\nimport { useVideoState } from '../../contexts/VideoStateContext';\r\nimport { Source } from '../../types';\r\nimport { parseNumberFromString } from '../../utils';\r\nimport styles from './Player.module.css';\r\nimport Hls from '../../types/hls.js';\r\nimport DashJS from '../../types/dashjs';\r\nimport loadScript from '../../utils/load-script';\r\n\r\nconst HLS_SCRIPT_URL =\r\n  'https://cdn.jsdelivr.net/npm/hls.js@latest/dist/hls.min.js';\r\nconst HLS_VARIABLE_NAME = 'Hls';\r\nconst DASH_SCRIPT_URL =\r\n  'https://cdn.jsdelivr.net/npm/dashjs@latest/dist/dash.all.min.js';\r\nconst DASH_VARIABLE_NAME = 'dashjs';\r\n\r\nexport interface PlayerProps extends React.HTMLAttributes<HTMLVideoElement> {\r\n  sources: Source[];\r\n  hlsRef?: React.MutableRefObject<Hls | null>;\r\n  dashRef?: React.MutableRefObject<DashJS.MediaPlayerClass | null>;\r\n  hlsConfig?: Hls['config'];\r\n  changeSourceUrl?: (currentSourceUrl: string, source: Source) => string;\r\n  onHlsInit?: (hls: Hls, currentSource: Source) => void;\r\n  onDashInit?: (dash: DashJS.MediaPlayerClass, currentSource: Source) => void;\r\n  onInit?: (videoEl: HTMLVideoElement) => void;\r\n  autoPlay?: boolean;\r\n}\r\n\r\nconst shouldPlayHls = (source: Source) =>\r\n  source.file.includes('m3u8') || source.type === 'hls';\r\n\r\nconst shouldPlayDash = (source: Source) =>\r\n  source.file.includes('mpd') || source.type === 'dash';\r\n\r\nconst noop = () => {};\r\n\r\nconst Player = React.forwardRef<HTMLVideoElement, PlayerProps>(\r\n  (\r\n    {\r\n      sources,\r\n      children,\r\n      hlsRef,\r\n      dashRef,\r\n      hlsConfig,\r\n      changeSourceUrl,\r\n      onHlsInit = noop,\r\n      onDashInit = noop,\r\n      onInit = noop,\r\n      autoPlay = false,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const innerRef = React.useRef<HTMLVideoElement>();\r\n    const hls = React.useRef<Hls | null>(null);\r\n    const dashjs = React.useRef<DashJS.MediaPlayerClass | null>(null);\r\n    const { state, setState } = useVideoState();\r\n\r\n    const playerRef = React.useCallback(\r\n      (node) => {\r\n        innerRef.current = node;\r\n        if (typeof ref === 'function') {\r\n          ref(node);\r\n        } else if (ref) {\r\n          (ref as React.MutableRefObject<HTMLVideoElement>).current = node;\r\n        }\r\n      },\r\n      [ref]\r\n    );\r\n\r\n    const initQuality = React.useCallback(() => {\r\n      const sortedQualities = sources\r\n        .filter((src) => !!src.label)\r\n        .map((src) => src.label as string)\r\n        .sort((a, b) => parseNumberFromString(b) - parseNumberFromString(a));\r\n\r\n      const notDuplicatedQualities: string[] = [\r\n        ...Array.from(new Set<string>(sortedQualities)),\r\n      ];\r\n\r\n      setState(() => ({\r\n        qualities: notDuplicatedQualities,\r\n        currentQuality: sortedQualities[0],\r\n      }));\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sources]);\r\n\r\n    const initPlayer = React.useCallback(\r\n      async (source: Source) => {\r\n        async function _initHlsPlayer() {\r\n          if (hls.current !== null) {\r\n            hls.current.destroy();\r\n          }\r\n\r\n          const HlsSDK = await loadScript<typeof Hls>(\r\n            HLS_SCRIPT_URL,\r\n            HLS_VARIABLE_NAME\r\n          );\r\n\r\n          if (HlsSDK.isSupported()) {\r\n            const _hls: Hls = new HlsSDK({\r\n              xhrSetup: (xhr, url) => {\r\n                const requestUrl = changeSourceUrl?.(url, source) || url;\r\n\r\n                xhr.open('GET', requestUrl, true);\r\n              },\r\n              ...hlsConfig,\r\n            });\r\n\r\n            _hls.subtitleTrack = -1;\r\n            _hls.subtitleDisplay = false;\r\n\r\n            if (hlsRef) {\r\n              hlsRef.current = _hls;\r\n            }\r\n\r\n            hls.current = _hls;\r\n\r\n            if (innerRef.current != null) {\r\n              _hls.attachMedia(innerRef.current);\r\n            }\r\n\r\n            onHlsInit?.(_hls, source);\r\n\r\n            _hls.on(Hls.Events.MEDIA_ATTACHED, () => {\r\n              _hls.loadSource(source.file);\r\n\r\n              _hls.on(Hls.Events.MANIFEST_PARSED, () => {\r\n                if (autoPlay) {\r\n                  innerRef?.current\r\n                    ?.play()\r\n                    .catch(() =>\r\n                      console.error(\r\n                        'User must interact before playing the video.'\r\n                      )\r\n                    );\r\n                }\r\n\r\n                if (sources.length > 1) return;\r\n                if (!_hls.levels?.length) return;\r\n\r\n                const levels: string[] = _hls.levels\r\n                  .sort((a, b) => b.height - a.height)\r\n                  .filter((level) => level.height)\r\n                  .map((level) => `${level.height}p`);\r\n\r\n                setState(() => ({\r\n                  qualities: levels,\r\n                  currentQuality: levels[0],\r\n                }));\r\n              });\r\n            });\r\n\r\n            _hls.on(Hls.Events.SUBTITLE_TRACKS_UPDATED, (_, event) => {\r\n              const modifiedSubtitles = event.subtitleTracks.map(\r\n                (track, index) => ({\r\n                  file: track.details?.fragments?.[0].url || track.url,\r\n                  lang: track.lang || index.toString(),\r\n                  language: track.name,\r\n                })\r\n              );\r\n\r\n              setState(() => ({\r\n                subtitles: modifiedSubtitles,\r\n                currentSubtitle: modifiedSubtitles[0]?.lang,\r\n              }));\r\n            });\r\n\r\n            _hls.on(Hls.Events.AUDIO_TRACKS_UPDATED, (_, event) => {\r\n              const modifiedAudios = event.audioTracks.map((track, index) => ({\r\n                lang: track.lang || index.toString(),\r\n                language: track.name,\r\n              }));\r\n\r\n              setState(() => ({\r\n                audios: modifiedAudios,\r\n                currentAudio:\r\n                  modifiedAudios[_hls.audioTrack >= 0 ? _hls.audioTrack : 0]\r\n                    ?.lang,\r\n              }));\r\n            });\r\n\r\n            _hls.on(Hls.Events.ERROR, function (event, data) {\r\n              console.log('ERROR:', event, data);\r\n\r\n              if (data.fatal) {\r\n                switch (data.type) {\r\n                  case Hls.ErrorTypes.NETWORK_ERROR:\r\n                    _hls.startLoad();\r\n                    break;\r\n                  case Hls.ErrorTypes.MEDIA_ERROR:\r\n                    _hls.recoverMediaError();\r\n\r\n                    break;\r\n                }\r\n              }\r\n            });\r\n          } else if (\r\n            innerRef.current?.canPlayType('application/vnd.apple.mpegurl')\r\n          ) {\r\n            innerRef.current.src = source.file;\r\n          }\r\n        }\r\n\r\n        async function _initDashPlayer() {\r\n          if (!innerRef.current) return;\r\n\r\n          if (dashjs.current !== null) {\r\n            dashjs.current.reset();\r\n          }\r\n\r\n          const DashSDK = await loadScript<typeof DashJS>(\r\n            DASH_SCRIPT_URL,\r\n            DASH_VARIABLE_NAME\r\n          );\r\n\r\n          const player = DashSDK.MediaPlayer().create();\r\n\r\n          dashjs.current = player;\r\n\r\n          if (dashRef) {\r\n            dashRef.current = player;\r\n          }\r\n\r\n          innerRef.current.addEventListener('loadeddata', () => {\r\n            const bitrates = player.getBitrateInfoListFor('video');\r\n\r\n            const qualities = bitrates.map((birate) => birate.height + 'p');\r\n\r\n            const bestQuality = bitrates[bitrates.length - 1];\r\n\r\n            player.setQualityFor('video', bestQuality.qualityIndex);\r\n\r\n            setState(() => ({\r\n              qualities,\r\n              currentQuality: bestQuality.height + 'p',\r\n            }));\r\n          });\r\n\r\n          player.updateSettings({\r\n            streaming: { abr: { autoSwitchBitrate: { video: false } } },\r\n          });\r\n\r\n          player.initialize();\r\n          player.setAutoPlay(autoPlay || false);\r\n          player.attachView(innerRef.current);\r\n          player.attachSource(source.file);\r\n\r\n          onDashInit?.(player, source);\r\n        }\r\n\r\n        if (!innerRef.current) return;\r\n\r\n        onInit?.(innerRef.current);\r\n\r\n        if (shouldPlayHls(source)) {\r\n          _initHlsPlayer();\r\n        } else if (shouldPlayDash(source)) {\r\n          _initDashPlayer();\r\n        } else {\r\n          if (innerRef.current.src) {\r\n            innerRef.current.pause();\r\n          }\r\n\r\n          innerRef.current.src = source.file;\r\n\r\n          innerRef.current.load();\r\n        }\r\n      },\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      [sources]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n      const _hls = hls.current;\r\n\r\n      const source =\r\n        sources.find((source) => source.label === state?.currentQuality) ||\r\n        sources[0];\r\n\r\n      initPlayer(source);\r\n\r\n      // If the sources have multiple m3u8 urls, then we have to handle quality ourself (because hls.js only handle quality with playlist url).\r\n      // Same with the sources that have multiple mp4 urls.\r\n      if (!shouldPlayHls(source) || sources.length > 1) {\r\n        initQuality();\r\n      }\r\n\r\n      return () => {\r\n        if (_hls !== null) {\r\n          _hls.destroy();\r\n        }\r\n      };\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sources]);\r\n\r\n    React.useEffect(() => {\r\n      const videoRef = innerRef.current;\r\n\r\n      if (!videoRef) return;\r\n      if (!state?.qualities.length) return;\r\n\r\n      const currentQuality = state?.currentQuality;\r\n\r\n      const source =\r\n        sources.find((source) => source.label === currentQuality) || sources[0];\r\n\r\n      // If the sources contain only one m3u8 url, then it maybe is a playlist.\r\n      if (shouldPlayHls(source) && sources.length === 1) {\r\n        // Check if the playlist gave us qualities.\r\n        if (!hls?.current?.levels?.length) return;\r\n        if (!currentQuality) return;\r\n\r\n        // Handle changing quality.\r\n        hls.current.currentLevel = hls.current.levels.findIndex(\r\n          (level) => level.height === Number(currentQuality.replace('p', ''))\r\n        );\r\n\r\n        return;\r\n      }\r\n\r\n      if (shouldPlayDash(source) && sources.length === 1) {\r\n        if (!dashjs.current) return;\r\n\r\n        const bitrates = dashjs.current.getBitrateInfoListFor('video');\r\n\r\n        // Check if the playlist gave us qualities.\r\n        if (!bitrates?.length) return;\r\n        if (!currentQuality) return;\r\n\r\n        const choseBitrate = bitrates.find(\r\n          (bitrate) =>\r\n            bitrate.height === Number(currentQuality.replace('p', ''))\r\n        );\r\n\r\n        if (!choseBitrate?.qualityIndex && choseBitrate?.qualityIndex !== 0) {\r\n          return;\r\n        }\r\n\r\n        // Handle changing quality.\r\n        dashjs.current.setQualityFor('video', choseBitrate.qualityIndex);\r\n\r\n        return;\r\n      }\r\n\r\n      const beforeChangeTime = videoRef.currentTime;\r\n\r\n      const qualitySource = sources.find(\r\n        (source) => source.label === state.currentQuality\r\n      );\r\n\r\n      if (!qualitySource) return;\r\n\r\n      initPlayer(qualitySource);\r\n\r\n      const handleQualityChange = () => {\r\n        videoRef.currentTime = beforeChangeTime;\r\n        videoRef.play();\r\n      };\r\n\r\n      videoRef.addEventListener('canplay', handleQualityChange, {\r\n        once: true,\r\n      });\r\n\r\n      return () => {\r\n        videoRef.removeEventListener('canplay', handleQualityChange);\r\n      };\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [state?.currentQuality]);\r\n\r\n    React.useEffect(() => {\r\n      const videoRef = innerRef.current;\r\n\r\n      if (!videoRef) return;\r\n      if (!state?.audios.length) return;\r\n      if (!hls?.current) return;\r\n\r\n      const currentAudio = state?.currentAudio;\r\n\r\n      if (!currentAudio) return;\r\n\r\n      const currentAudioTrack = state.audios.findIndex(\r\n        (audio) => audio.lang === currentAudio\r\n      );\r\n\r\n      hls.current.audioTrack = currentAudioTrack;\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [state?.currentAudio]);\r\n\r\n    return (\r\n      <video\r\n        ref={playerRef}\r\n        autoPlay={autoPlay}\r\n        preload=\"auto\"\r\n        className={styles.video}\r\n        playsInline\r\n        crossOrigin=\"anonymous\"\r\n        {...props}\r\n      >\r\n        {children}\r\n      </video>\r\n    );\r\n  }\r\n);\r\n\r\nPlayer.displayName = 'Player';\r\n\r\nexport default Player;\r\n","import { parse } from '@plussub/srt-vtt-parser';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { buildAbsoluteURL } from 'url-toolkit';\r\nimport { useSubtitleSettings } from '../../contexts/SubtitleSettingsContext';\r\nimport { useVideo } from '../../contexts/VideoContext';\r\nimport { useInteract } from '../../contexts/VideoInteractingContext';\r\nimport { useVideoState } from '../../contexts/VideoStateContext';\r\nimport useTextScaling from '../../hooks/useTextScaling';\r\nimport { classNames, isValidUrl } from '../../utils';\r\nimport { isDesktop } from '../../utils/device';\r\nimport styles from './Subtitle.module.css';\r\n\r\nconst textStyles = {\r\n  none: '',\r\n  outline: `black 0px 0px 3px, black 0px 0px 3px, black 0px 0px 3px, black 0px 0px 3px, black 0px 0px 3px`,\r\n};\r\n\r\nconst BASE_FONT_SIZE = 16;\r\nconst LINE_HEIHT_RATIO = 1.333;\r\n\r\nconst M3U8_SUBTITLE_REGEX = /.*\\.(vtt|srt)/g;\r\n\r\nconst requestSubtitle = async (url: string): Promise<string | null> => {\r\n  if (url.includes('vtt') || url.includes('srt')) {\r\n    const response = await fetch(url);\r\n    const text = await response.text();\r\n\r\n    return text;\r\n  }\r\n\r\n  if (url.includes('m3u8')) {\r\n    const response = await fetch(url);\r\n    const text = await response.text();\r\n\r\n    const matches = text.match(M3U8_SUBTITLE_REGEX);\r\n\r\n    if (!matches?.length) return null;\r\n\r\n    if (!matches[0]) return null;\r\n\r\n    const nextUrl = isValidUrl(matches[0])\r\n      ? matches[0]\r\n      : buildAbsoluteURL(url, matches[0]);\r\n\r\n    return requestSubtitle(nextUrl);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst Subtitle = () => {\r\n  const { state } = useVideoState();\r\n  const { state: subtitleSettings } = useSubtitleSettings();\r\n  const { moderateScale } = useTextScaling();\r\n  const { videoEl } = useVideo();\r\n  const { isInteracting } = useInteract();\r\n  const [currentText, setCurrentText] = useState<string>('');\r\n  const [subtitleText, setSubtitleText] = useState<string>('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const subtitle = useMemo(\r\n    () => state.subtitles?.find((sub) => sub.lang === state.currentSubtitle),\r\n    [state.subtitles, state.currentSubtitle]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!subtitle?.file) return;\r\n\r\n    const getSubtitle = async () => {\r\n      setIsLoading(true);\r\n\r\n      const text = await requestSubtitle(subtitle.file);\r\n\r\n      setIsLoading(false);\r\n\r\n      if (!text) return;\r\n\r\n      setSubtitleText(text);\r\n    };\r\n\r\n    getSubtitle();\r\n  }, [subtitle]);\r\n\r\n  useEffect(() => {\r\n    if (!subtitleText) return;\r\n    if (!videoEl) return;\r\n\r\n    const { entries = [] } = parse(subtitleText);\r\n\r\n    const handleSubtitle = () => {\r\n      const currentTime = videoEl.currentTime * 1000;\r\n      const currentEntry = entries.find(\r\n        (entry) => entry.from <= currentTime && entry.to >= currentTime\r\n      );\r\n\r\n      setCurrentText(currentEntry?.text || '');\r\n    };\r\n\r\n    videoEl.addEventListener('timeupdate', handleSubtitle);\r\n\r\n    return () => {\r\n      videoEl.removeEventListener('timeupdate', handleSubtitle);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [subtitleText]);\r\n\r\n  const fontSize = useMemo(() => {\r\n    return moderateScale(subtitleSettings.fontSize * BASE_FONT_SIZE);\r\n  }, [moderateScale, subtitleSettings.fontSize]);\r\n\r\n  const lineHeight = useMemo(() => {\r\n    return fontSize * LINE_HEIHT_RATIO;\r\n  }, [fontSize]);\r\n\r\n  if (isLoading || !subtitle?.file || !currentText || state.isSubtitleDisabled)\r\n    return null;\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        styles.container,\r\n        isInteracting && isDesktop && styles.interacting\r\n      )}\r\n    >\r\n      <p\r\n        className={classNames(styles.text)}\r\n        style={{\r\n          fontSize: fontSize + 'px',\r\n          lineHeight: lineHeight + 'px',\r\n          backgroundColor: `rgba(0, 0, 0, ${subtitleSettings.backgroundOpacity})`,\r\n          color: `rgba(255, 255, 255, ${subtitleSettings.fontOpacity})`,\r\n          textShadow: textStyles[subtitleSettings.textStyle],\r\n        }}\r\n      >\r\n        {currentText}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Subtitle;\r\n","import * as React from 'react';\r\nimport { useInteract } from '../../contexts/VideoInteractingContext';\r\nimport { Components, NetPlayerProps } from '../../contexts/VideoPropsContext';\r\nimport useDoubleTap from '../../hooks/useDoubleTap';\r\nimport useGlobalHotKeys from '../../hooks/useGlobalHotKeys';\r\nimport { classNames } from '../../utils';\r\nimport { isMobile } from '../../utils/device';\r\nimport { IndicatorRef } from '../Indicator/Indicator';\r\nimport styles from './DefaultUI.module.css';\r\n\r\nimport Controls from '../Controls';\r\nimport MobileBackwardIndicator from '../Indicator/MobileBackwardIndicator';\r\nimport MobileForwardIndicator from '../Indicator/MobileForwardIndicator';\r\nimport MobileControls from '../MobileControls';\r\nimport MobileOverlay from '../MobileOverlay';\r\nimport Overlay from '../Overlay';\r\nimport Player from '../Player/Player';\r\nimport Subtitle from '../Subtitle';\r\nimport { PLAYER_CONTAINER_CLASS } from '../../constants';\r\n\r\nconst noop = () => {};\r\n\r\nconst defaultComponents: Components = {\r\n  Controls,\r\n  MobileControls,\r\n  MobileBackwardIndicator,\r\n  MobileForwardIndicator,\r\n  MobileOverlay,\r\n  Overlay,\r\n  Player,\r\n  Subtitle,\r\n};\r\n\r\nconst DefaultUI = React.forwardRef<HTMLVideoElement, NetPlayerProps>(\r\n  ({ hlsRef = React.createRef(), components, ...props }, ref) => {\r\n    const videoRef = React.useRef<HTMLVideoElement | null>(null);\r\n    const { setIsInteracting } = useInteract();\r\n    const interactingTimeout = React.useRef<NodeJS.Timeout>();\r\n    const backIndicatorRef = React.useRef<IndicatorRef>(null);\r\n    const forwardIndicatorRef = React.useRef<IndicatorRef>(null);\r\n\r\n    const resetInteractingCycle = React.useCallback(() => {\r\n      setIsInteracting(true);\r\n\r\n      if (interactingTimeout.current) {\r\n        clearTimeout(interactingTimeout.current);\r\n      }\r\n\r\n      interactingTimeout.current = setTimeout(() => {\r\n        setIsInteracting(false);\r\n      }, 3000);\r\n    }, [setIsInteracting]);\r\n\r\n    const uiComponents = React.useMemo(\r\n      () => ({\r\n        Controls: components?.Controls || defaultComponents.Controls,\r\n        MobileControls:\r\n          components?.MobileControls || defaultComponents.MobileControls,\r\n        MobileBackwardIndicator:\r\n          components?.MobileBackwardIndicator ||\r\n          defaultComponents.MobileBackwardIndicator,\r\n        MobileForwardIndicator:\r\n          components?.MobileForwardIndicator ||\r\n          defaultComponents.MobileForwardIndicator,\r\n        MobileOverlay:\r\n          components?.MobileOverlay || defaultComponents.MobileOverlay,\r\n        Overlay: components?.Overlay || defaultComponents.Overlay,\r\n        Player: components?.Player || defaultComponents.Player,\r\n        Subtitle: components?.Subtitle || defaultComponents.Subtitle,\r\n      }),\r\n      [components]\r\n    );\r\n\r\n    const handleDoubleTap: React.DOMAttributes<HTMLDivElement>['onTouchStart'] =\r\n      React.useCallback((e) => {\r\n        if (!videoRef.current) return;\r\n\r\n        const { clientX } = e.changedTouches[0];\r\n\r\n        const widthPercent = 45;\r\n        const width = (window.innerWidth * widthPercent) / 100;\r\n\r\n        if (clientX < width) {\r\n          backIndicatorRef?.current?.show();\r\n          videoRef.current.currentTime = videoRef.current.currentTime - 10;\r\n        } else if (clientX > window.innerWidth - width) {\r\n          forwardIndicatorRef?.current?.show();\r\n          videoRef.current.currentTime = videoRef.current.currentTime + 10;\r\n        }\r\n      }, []);\r\n\r\n    const handleTap: React.DOMAttributes<HTMLDivElement>['onTouchStart'] =\r\n      React.useCallback(\r\n        (e) => {\r\n          const target = e.target as HTMLDivElement;\r\n          const videoOverlay = document.querySelector('.mobile-overlay');\r\n\r\n          if (!videoOverlay) {\r\n            resetInteractingCycle();\r\n\r\n            return;\r\n          }\r\n\r\n          const shouldCloseControls =\r\n            target.classList.contains('mobile-overlay');\r\n\r\n          if (shouldCloseControls) {\r\n            setIsInteracting(false);\r\n\r\n            return;\r\n          }\r\n\r\n          resetInteractingCycle();\r\n        },\r\n        [resetInteractingCycle, setIsInteracting]\r\n      );\r\n\r\n    const onTap = useDoubleTap({\r\n      onDoubleTap: handleDoubleTap,\r\n      onTap: handleTap,\r\n      tapThreshold: 250,\r\n    });\r\n\r\n    useGlobalHotKeys(videoRef.current!);\r\n\r\n    const playerRef = React.useCallback(\r\n      (node) => {\r\n        videoRef.current = node;\r\n        if (typeof ref === 'function') {\r\n          ref(node);\r\n        } else if (ref) {\r\n          (ref as React.MutableRefObject<HTMLVideoElement>).current = node;\r\n        }\r\n      },\r\n      [ref]\r\n    );\r\n\r\n    return (\r\n      <div\r\n        onClick={!isMobile ? resetInteractingCycle : noop}\r\n        onMouseMove={!isMobile ? resetInteractingCycle : noop}\r\n        onTouchStart={isMobile ? onTap : noop}\r\n        className={classNames(PLAYER_CONTAINER_CLASS, styles.container)}\r\n      >\r\n        <uiComponents.MobileBackwardIndicator ref={backIndicatorRef} />\r\n        <uiComponents.MobileForwardIndicator ref={forwardIndicatorRef} />\r\n\r\n        <uiComponents.Subtitle />\r\n\r\n        <div className={styles.playerContainer}>\r\n          <uiComponents.Player ref={playerRef} hlsRef={hlsRef} {...props} />\r\n        </div>\r\n\r\n        <div className={styles.overlayContainer}>\r\n          {isMobile ? <uiComponents.MobileOverlay /> : <uiComponents.Overlay />}\r\n        </div>\r\n\r\n        <div className={styles.controlsContainer}>\r\n          {isMobile ? (\r\n            <uiComponents.MobileControls />\r\n          ) : (\r\n            <uiComponents.Controls />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDefaultUI.displayName = 'DefaultUI';\r\n\r\nexport default React.memo(DefaultUI);\r\n","import * as React from 'react';\r\n\r\nimport { useVideo } from '../../contexts/VideoContext';\r\nimport { useInteract } from '../../contexts/VideoInteractingContext';\r\nimport { classNames } from '../../utils';\r\nimport BackwardButton from './BackwardButton';\r\nimport styles from './Controls.module.css';\r\nimport ForwardButton from './ForwardButton';\r\nimport FullscreenButton from './FullscreenButton';\r\nimport PlayPauseButton from './PlayPauseButton';\r\nimport ProgressSlider from './ProgressSlider';\r\nimport ScreenshotButton from './ScreenshotButton';\r\nimport SettingsButton from './SettingsButton';\r\nimport SubtitleButton from './SubtitleButton';\r\nimport TimeIndicator from './TimeIndicator';\r\nimport VolumeButton from './VolumeButton';\r\n\r\nconst Controls = () => {\r\n  const { isInteracting } = useInteract();\r\n  const { videoState } = useVideo();\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        styles.container,\r\n        !videoState.seeking &&\r\n          !isInteracting &&\r\n          !videoState.buffering &&\r\n          styles.hide\r\n      )}\r\n    >\r\n      <div className={styles.sliderContainer}>\r\n        <ProgressSlider />\r\n      </div>\r\n\r\n      <div className={styles.buttonContainer}>\r\n        <div className={styles.leftButtonContainer}>\r\n          <PlayPauseButton />\r\n          <BackwardButton />\r\n          <ForwardButton />\r\n          <VolumeButton />\r\n          <TimeIndicator />\r\n        </div>\r\n        <div className={styles.rightButtonContainer}>\r\n          <ScreenshotButton />\r\n          <SubtitleButton />\r\n          <SettingsButton />\r\n          <FullscreenButton />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","export const PLAYER_CONTAINER_CLASS = 'netplayer-container';\r\n","import './global.css';\r\nimport './reset.css';\r\n\r\nimport * as React from 'react';\r\nimport GlobalContext from './contexts/GlobalContext';\r\nimport { VideoContextProvider } from './contexts/VideoContext';\r\nimport { NetPlayerProps } from './contexts/VideoPropsContext';\r\nimport DefaultUI from './components/DefaultUI';\r\n\r\nconst InnerPlayer = React.forwardRef<HTMLVideoElement, NetPlayerProps>(\r\n  ({ hlsRef = React.createRef(), children, ...props }, ref) => {\r\n    const videoRef = React.useRef<HTMLVideoElement | null>(null);\r\n\r\n    const playerRef = React.useCallback(\r\n      (node) => {\r\n        videoRef.current = node;\r\n        if (typeof ref === 'function') {\r\n          ref(node);\r\n        } else if (ref) {\r\n          (ref as React.MutableRefObject<HTMLVideoElement>).current = node;\r\n        }\r\n      },\r\n      [ref]\r\n    );\r\n\r\n    return (\r\n      <VideoContextProvider videoRef={videoRef} hlsRef={hlsRef}>\r\n        {children || <DefaultUI ref={playerRef} {...props} />}\r\n      </VideoContextProvider>\r\n    );\r\n  }\r\n);\r\n\r\nconst NetPlayer = React.forwardRef<HTMLVideoElement, NetPlayerProps>(\r\n  (\r\n    { sources, subtitles = [], hlsRef = React.createRef(), children, ...props },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <GlobalContext sources={sources} subtitles={subtitles} {...props}>\r\n        <InnerPlayer\r\n          sources={sources}\r\n          subtitles={subtitles}\r\n          hlsRef={hlsRef}\r\n          ref={ref}\r\n          {...props}\r\n        >\r\n          {children}\r\n        </InnerPlayer>\r\n      </GlobalContext>\r\n    );\r\n  }\r\n);\r\n\r\nInnerPlayer.displayName = 'InnerPlayer';\r\nNetPlayer.displayName = 'NetPlayer';\r\n\r\nexport * from './components';\r\nexport * from './hooks';\r\nexport * from './hotkeys';\r\nexport * from './contexts';\r\n\r\nexport default NetPlayer;\r\n","import { useEffect } from 'react';\r\n\r\nconst useClickOutside = <T extends HTMLElement | null>(\r\n  ref: React.MutableRefObject<T>,\r\n  handler: (event: TouchEvent | MouseEvent) => void\r\n) => {\r\n  useEffect(() => {\r\n    const listener = (event: TouchEvent | MouseEvent) => {\r\n      const target = event.target as HTMLElement;\r\n\r\n      if (!ref.current) return;\r\n\r\n      if (ref.current?.contains(target)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener('mousedown', listener);\r\n    document.addEventListener('touchstart', listener);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener);\r\n      document.removeEventListener('touchstart', listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n\r\nexport default useClickOutside;\r\n","import { useEffect, useRef } from 'react';\r\n\r\nfunction usePrevious<T>(value: T) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef<T>();\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n\r\nexport default usePrevious;\r\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","defaultSubtitleSettings","fontSize","backgroundOpacity","fontOpacity","textStyle","SubtitleSettingsContext","React","createContext","state","setState","SubtitleSettingsProvider","defaultState","children","useState","updateState","useCallback","stateSelector","newState","useEffect","rawSettings","localStorage","getItem","settings","JSON","parse","setItem","stringify","Provider","value","useSubtitleSettings","useContext","VideoInteractingContext","isInteracting","setIsInteracting","VideoInteractingContextProvider","defaultValue","useInteract","backwardHotKey","hotKey","fn","videoEl","currentTime","name","forwardHotKey","isMobile","a","b","test","substr","navigator","userAgent","vendor","window","opera","isDesktop","methodMap","nativeAPI","unprefixedMethods","returnValue","methodList","entries","getNativeAPI","eventNameMap","change","fullscreenchange","error","fullscreenerror","screenfull","request","element","options","documentElement","Promise","resolve","reject","onFullScreenEntered","off","on","returnPromise","requestFullscreen","then","exit","isFullscreen","onFullScreenExit","exitFullscreen","toggle","onchange","callback","onerror","event","eventName","addEventListener","removeEventListener","raw","isEnabled","Object","defineProperties","get","Boolean","fullscreenElement","enumerable","fullscreenEnabled","fullscreenHotKey","containerEl","querySelector","screen","orientation","lock","playPauseHotKey","paused","play","pause","volumeHotKey","previousVolume","volume","classNames","args","filter","join","convertTime","seconds","toString","minutes","Math","floor","Number","hours","parseNumberFromString","str","replace","isObject","item","Array","isArray","stringInterpolate","data","forEach","isValidUrl","url","RegExp","isInArray","array","indexOf","defaultI18n","controls","forward","backward","enableSubtitle","disableSubtitle","enterFullscreen","muteVolume","unmuteVolume","sliderDragMessage","screenshot","audio","playbackSpeed","quality","subtitle","subtitleSettings","reset","none","subtitleBackgroundOpacity","subtitleFontOpacity","subtitleFontSize","subtitleTextStyle","defaultHotKeys","VideoPropsContext","VideoPropsProvider","props","i18n","mergeDeep","target","sources","length","source","shift","key","assign","hotkeys","main","hotkey","index","findIndex","h","push","_loop","mergeHotkeys","useVideoProps","defaultVideoState","subtitles","qualities","audios","currentQuality","currentSubtitle","currentAudio","isSubtitleDisabled","VideoStateContext","VideoStateContextProvider","defaultQualities","useMemo","label","map","_props$subtitles$","lang","getState","langAudios","langSubtitles","s","langQualities","prev","useVideoState","GlobalContext","buffering","duration","ended","seeking","VideoContext","videoState","setVideoState","VideoContextProvider","videoRef","hlsRef","setVideoEl","hls","setHls","current","handleError","message","handleWaiting","handleloadeddata","handlePlay","handlePause","handleTimeupdate","handleEnded","handleVolumeChange","Hls","Events","ERROR","_","details","useVideo","useDoubleTap","onDoubleTap","onTap","tapThreshold","lastTap","useRef","timeout","e","persist","clearTimeout","now","Date","getTime","timeFromLastTap","setTimeout","IS_MAC","platform","MODIFIERS","alt","control","meta","ALIASES","add","break","cmd","command","ctl","ctrl","del","down","esc","ins","left","mod","opt","option","return","right","space","spacebar","up","win","windows","CODES","backspace","tab","enter","capslock","escape"," ","pageup","pagedown","end","home","arrowleft","arrowup","arrowright","arrowdown","insert","delete","numlock","scrolllock",";","=",",","-",".","/","`","[","\\","]","'","f","toKeyCode","toKeyName","toUpperCase","charCodeAt","toLowerCase","useGlobalHotKeys","handleKeyDown","focusEl","activeElement","tagName","matchedHotKey","find","string","ret","values","split","k","optional","endsWith","slice","modifier","TypeError","which","parseHotkey","check","some","object","expected","actual","compareHotkey","isHotkey","defaultOptions","position","offset","strategy","overflowElement","usePopover","x","y","setData","floatingRef","referenceRef","update","overflowRect","getBoundingClientRect","referenceRect","floatingRect","width","top","height","bottom","resizeObserver","ResizeObserver","observe","passive","capture","disconnect","Portal","body","createPortal","noop","Popover","reference","popperProps","referenceProps","portalSelector","portalElement","setPortalElement","className","popperClassName","popperRest","referenceClassName","referenceRest","isOpen","setIsOpen","handleOpen","stopPropagation","preventDefault","handleClose","useLayoutEffect","el","Fragment","onClick","onMouseEnter","onMouseLeave","zIndex","ControlButton","tooltip","tooltipProps","button","backgroundColor","padding","SliderContext","vertical","Slider","onPercentChange","onPercentChanging","onMouseDown","onMouseUp","onPercentIntent","onMouseMove","onTouchMove","onTouchStart","onTouchEnd","onDragStart","onDragEnd","sliderRef","isMouseDown","lastTouch","calculatePercent","_sliderRef$current","percent","newPercent","isNaN","handleDocumentTouchMove","cancelable","handleTouchStart","touches","clientY","clientX","handleTouchMove","handleTouchEnd","handleMouseDown","handleMouseUp","handleMouseMove","handleMouseLeave","handleWindowMouseMove","handleWindowMouseUp","sliderStyle","useSlider","Bar","barStyle","Dot","dotStyle","dotSize","getDimension","useTextScaling","shortDimension","longDimension","setDimension","handleResize","scale","size","verticalScale","moderateScale","factor","moderateVerticalScale","useHotKey","hotKeyName","parseHotKey","seperator","ThumbnailHover","hoverPercent","thumbnailEntries","setThumbnailEntries","thumbnail","_context","fetch","response","text","_parse","fetchThumbnails","currentThumbnail","currentEntry","entry","from","to","thumbnailUrlRaw","buildAbsoluteURL","URL","thumbnailUrl","origin","pathname","trim","w","rect","display","backgroundImage","backgroundPositionX","backgroundPositionY","backgroundRepeat","ProgressSlider","bufferPercent","setBufferPercent","setHoverPercent","setCurrentTime","handleProgressBuffer","buffer","buffered","bufferedTime","handleTimeUpdate","currentPercent","handlePercentIntent","handlePercentChange","newTime","handleDragStart","handleDragEnd","handlePercentChanging","Dialog","show","setShow","SettingsIcon","viewBox","fill","d","ArrowLeftIcon","xmlns","ArrowRightIcon","memo","TextIcon","leftIcon","rightIcon","as","Component","CheckIcon","Memo","defaultHistory","menuKey","title","NestedMenuContext","activeMenu","pop","NestedMenu","history","setHistory","handleGoBack","historyPush","menu","historyPop","BaseItem","isShown","isActive","activeIcon","slot","displayName","Item","parentMenuKey","itemKey","activeItemKey","onChange","SubMenu","icon","isParentActive","handleSetMenu","resolvedChildren","isValidElement","Children","count","childrenWithMenuKey","child","cloneElement","itemProps","activeItem","AudioIcon","AudioMenu","_state$audios","_state$audios$","language","PlaybackSpeedIcon","fillRule","clipRule","speeds","PlaybackSpeedMenu","playbackRate","speed","QualityIcon","QualityMenu","SubtitleIcon","opacities","SubtitleBackgroundOpacity","opacity","SubtitleFontOpacity","fontSizes","SubtitleFontSize","SubtitleTextStyle","SubtitleSettings","val","SubtitleMenu","_state$subtitles","_state$subtitles$","Menu","maxHeight","selector","SettingsButton","VolumeMutedIcon","VolumeOneIcon","VolumeThreeIcon","VolumeTwoIcon","VolumeComponents","0","0.25","0.5","1","VolumeButton","VolumeComponent","sort","handleClick","shortcut","BackwardIcon","createIndicator","component","BaseIndicator","container","setContainer","innerRef","hide","Indicator","BackwardIndicator","transform","BackwardButton","backwardIndicator","time","ForwardIcon","ForwardIndicator","ForwardButton","forwardIndicator","FullscreenEnterIcon","FullscreenExitIcon","FullscreenButton","setIsFullscreen","handleFullscreen","PlayIcon","PauseIcon","LoadingIcon","attributeName","dur","repeatCount","PlayIndicator","PauseIndicator","PlayPauseButton","playIndicator","pauseIndicator","SubtitleOffIcon","SubtitleButton","TimeIndicator","MobileVolumeSlider","CameraIcon","ScreenshotButton","canvas","ctx","getContext","videoWidth","videoHeight","drawImage","elink","fileName","chars","random","i","randomString","toDataURL","href","download","click","removeChild","MobileBackwardIndicator","MobileForwardIndicator","MobileControls","SliderIcon","MobileOverlay","styles","Overlay","loadedScripts","getDefinedScript","variableName","exports","module","loadScript","src","load","err","script","HLS_SCRIPT_URL","DASH_SCRIPT_URL","shouldPlayHls","file","includes","shouldPlayDash","Player","dashRef","hlsConfig","changeSourceUrl","onHlsInit","onDashInit","onInit","autoPlay","dashjs","playerRef","node","initQuality","sortedQualities","notDuplicatedQualities","Set","initPlayer","_initHlsPlayer","_initDashPlayer","_initDashPlayer2","_context2","player","MediaPlayer","create","bitrates","getBitrateInfoListFor","birate","bestQuality","setQualityFor","qualityIndex","updateSettings","streaming","abr","autoSwitchBitrate","video","initialize","setAutoPlay","attachView","attachSource","_initHlsPlayer2","destroy","HlsSDK","isSupported","_hls","xhrSetup","xhr","requestUrl","open","subtitleTrack","subtitleDisplay","attachMedia","MEDIA_ATTACHED","loadSource","MANIFEST_PARSED","console","levels","_hls$levels","level","SUBTITLE_TRACKS_UPDATED","modifiedSubtitles","subtitleTracks","track","fragments","_modifiedSubtitles$","AUDIO_TRACKS_UPDATED","modifiedAudios","audioTracks","audioTrack","_modifiedAudios","log","fatal","ErrorTypes","NETWORK_ERROR","startLoad","MEDIA_ERROR","recoverMediaError","_innerRef$current2","canPlayType","_context3","_hls$current","_hls$current$levels","currentLevel","choseBitrate","bitrate","beforeChangeTime","qualitySource","handleQualityChange","once","currentAudioTrack","preload","playsInline","crossOrigin","textStyles","outline","M3U8_SUBTITLE_REGEX","requestSubtitle","matches","match","nextUrl","Subtitle","currentText","setCurrentText","subtitleText","setSubtitleText","isLoading","setIsLoading","sub","getSubtitle","handleSubtitle","lineHeight","color","textShadow","defaultComponents","Controls","DefaultUI","components","interactingTimeout","backIndicatorRef","forwardIndicatorRef","resetInteractingCycle","uiComponents","handleDoubleTap","changedTouches","innerWidth","handleTap","classList","contains","InnerPlayer","NetPlayer","handler","listener","_ref$current"],"mappings":"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"}