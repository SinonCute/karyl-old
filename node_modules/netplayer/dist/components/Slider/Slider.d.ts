import React, { PropsWithChildren } from 'react';
interface SliderOptions {
    vertical?: boolean;
}
interface SliderProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onDragStart' | 'onDragEnd'> {
    onPercentChange?: (percent: number) => void;
    onPercentIntent?: (percent: number) => void;
    onPercentChanging?: (percent: number) => void;
    onDragStart?: (percent: number) => void;
    onDragEnd?: (percent: number) => void;
    vertical?: boolean;
    width?: number | string;
    height?: number | string;
}
declare const Slider: {
    ({ onPercentChange, onPercentChanging, onMouseDown, onMouseUp, onMouseLeave, onPercentIntent, onMouseMove, onTouchMove, onTouchStart, onTouchEnd, children, className, onDragStart, onDragEnd, vertical, height, width, ...props }: PropsWithChildren<SliderProps & SliderOptions>): JSX.Element;
    Bar: React.FC<BarProps>;
    Dot: React.FC<DotProps>;
};
export declare const useSlider: () => SliderOptions;
interface BarProps extends React.HTMLAttributes<HTMLDivElement> {
    percent?: number;
}
interface DotProps extends React.HTMLAttributes<HTMLDivElement> {
    percent?: number;
    width?: number;
    height?: number;
}
export default Slider;
