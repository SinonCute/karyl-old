import React, { PropsWithChildren } from 'react';
interface NestedMenuProps extends React.HTMLProps<HTMLDivElement> {
}
declare const NestedMenu: {
    ({ children, className, ...props }: PropsWithChildren<NestedMenuProps>): JSX.Element;
    Item: React.MemoExoticComponent<({ title, parentMenuKey, itemKey, activeItemKey, value, onChange, ...props }: ItemProps) => JSX.Element>;
    SubMenu: React.FC<SubMenuProps>;
};
export interface ItemProps extends Omit<React.HTMLProps<HTMLLIElement>, 'onChange'> {
    parentMenuKey?: string;
    itemKey: string;
    title: string;
    activeItemKey?: string;
    value: string;
    onChange?: (value: string) => void;
}
export interface BaseItemProps extends Omit<React.HTMLAttributes<HTMLLIElement>, 'slot'> {
    title: string;
    isShown?: boolean;
    isActive?: boolean;
    activeIcon?: React.ReactNode;
    slot?: React.ReactNode;
}
export interface SubMenuProps extends Omit<React.HTMLProps<HTMLUListElement>, 'onChange'> {
    menuKey: string;
    title: string;
    activeItemKey?: string;
    parentMenuKey?: string;
    icon?: React.ReactNode;
    onChange?: (value: string) => void;
}
export default NestedMenu;
